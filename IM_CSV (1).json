{
  "pipelineConfig" : {
    "schemaVersion" : 1,
    "version" : 5,
    "uuid" : "2daebbbf-3aba-479f-aef3-e31d3d562a62",
    "description" : "",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "STANDALONE"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "memoryLimit",
      "value" : "${jvm:maxMemoryMB() * 0.65}"
    }, {
      "name" : "memoryLimitExceeded",
      "value" : "STOP_PIPELINE"
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ {
        "key" : "origin",
        "value" : "/Users/dylanhuang/Ubuntu64/IM-testing/origin"
      }, {
        "key" : "destination",
        "value" : "/Users/dylanhuang/Ubuntu64/IM-testing/destination"
      }, {
        "key" : "error",
        "value" : "/Users/dylanhuang/Ubuntu64/IM-testing/error"
      }, {
        "key" : "DT",
        "value" : "date"
      }, {
        "key" : "CT",
        "value" : "country"
      }, {
        "key" : "ID",
        "value" : "indicator"
      }, {
        "key" : "VL",
        "value" : "value"
      } ]
    }, {
      "name" : "badRecordsHandling",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_recordstolocalfilesystem_ToErrorLocalFSDTarget::1"
    }, {
      "name" : "statsAggregatorStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget::1"
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 1024
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:PermSize=128M -XX:MaxPermSize=256M -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    }, {
      "name" : "rateLimit",
      "value" : 0
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : 10,
        "timeout" : 10000,
        "writeToDestinations" : false,
        "showHeader" : true,
        "showFieldType" : true,
        "rememberMe" : false
      }
    },
    "stages" : [ {
      "instanceName" : "com_streamsets_pipeline_stage_origin_spooldir_SpoolDirDSource_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_origin_spooldir_SpoolDirDSource",
      "stageVersion" : "7",
      "configuration" : [ {
        "name" : "conf.dataFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "conf.dataFormatConfig.removeCtrlChars",
        "value" : false
      }, {
        "name" : "conf.dataFormatConfig.compression",
        "value" : "NONE"
      }, {
        "name" : "conf.dataFormatConfig.filePatternInArchive",
        "value" : "*"
      }, {
        "name" : "conf.dataFormatConfig.textMaxLineLen",
        "value" : 1024
      }, {
        "name" : "conf.dataFormatConfig.jsonContent",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "conf.dataFormatConfig.jsonMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "conf.dataFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "conf.dataFormatConfig.csvHeader",
        "value" : "WITH_HEADER"
      }, {
        "name" : "conf.dataFormatConfig.csvMaxObjectLen",
        "value" : 33554432
      }, {
        "name" : "conf.dataFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "conf.dataFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "conf.dataFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "conf.dataFormatConfig.csvRecordType",
        "value" : "LIST_MAP"
      }, {
        "name" : "conf.dataFormatConfig.csvSkipStartLines",
        "value" : 0
      }, {
        "name" : "conf.dataFormatConfig.xmlRecordElement",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.xmlMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "conf.dataFormatConfig.logMode",
        "value" : "COMMON_LOG_FORMAT"
      }, {
        "name" : "conf.dataFormatConfig.logMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "conf.dataFormatConfig.retainOriginalLine",
        "value" : false
      }, {
        "name" : "conf.dataFormatConfig.customLogFormat",
        "value" : "%h %l %u %t \"%r\" %>s %b"
      }, {
        "name" : "conf.dataFormatConfig.regex",
        "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
      }, {
        "name" : "conf.dataFormatConfig.fieldPathsToGroupName",
        "value" : [ {
          "fieldPath" : "/",
          "group" : 1
        } ]
      }, {
        "name" : "conf.dataFormatConfig.grokPatternDefinition",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.grokPattern",
        "value" : "%{COMMONAPACHELOG}"
      }, {
        "name" : "conf.dataFormatConfig.onParseError",
        "value" : "ERROR"
      }, {
        "name" : "conf.dataFormatConfig.maxStackTraceLines",
        "value" : 50
      }, {
        "name" : "conf.dataFormatConfig.enableLog4jCustomLogFormat",
        "value" : false
      }, {
        "name" : "conf.dataFormatConfig.log4jCustomLogFormat",
        "value" : "%r [%t] %-5p %c %x - %m%n"
      }, {
        "name" : "conf.dataFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.isDelimited",
        "value" : true
      }, {
        "name" : "conf.dataFormatConfig.binaryMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "conf.dataFormat",
        "value" : "DELIMITED"
      }, {
        "name" : "conf.spoolDir",
        "value" : "${origin}"
      }, {
        "name" : "conf.allowLateDirectory",
        "value" : false
      }, {
        "name" : "conf.overrunLimit",
        "value" : 512
      }, {
        "name" : "conf.batchSize",
        "value" : 10000
      }, {
        "name" : "conf.poolingTimeoutSecs",
        "value" : 1
      }, {
        "name" : "conf.useLastModified",
        "value" : "LEXICOGRAPHICAL"
      }, {
        "name" : "conf.filePattern",
        "value" : "*.csv"
      }, {
        "name" : "conf.maxSpoolFiles",
        "value" : 1000
      }, {
        "name" : "conf.initialFileToProcess",
        "value" : ""
      }, {
        "name" : "conf.errorArchiveDir",
        "value" : null
      }, {
        "name" : "conf.postProcessing",
        "value" : "NONE"
      }, {
        "name" : "conf.archiveDir",
        "value" : null
      }, {
        "name" : "conf.retentionTimeMins",
        "value" : 0
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "yPos" : 44,
        "stageType" : "SOURCE",
        "rawSource" : {
          "configuration" : [ {
            "name" : "fileName",
            "value" : "/Users/dylanhuang/Ubuntu64/IM-testing/origin/tabula-2015_human_development_report.csv"
          } ]
        },
        "description" : "",
        "label" : "CSV Pickup",
        "xPos" : 54
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_origin_spooldir_SpoolDirDSource_01OutputLane14656964692430" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "expressionProcessorConfigs",
        "value" : [ {
          "fieldToSet" : "/'filename'",
          "expression" : "${record:attribute('filename')}"
        } ]
      }, {
        "name" : "headerAttributeConfigs",
        "value" : [ ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "Because you can't access record header attributes in the JavaScript evaluator, the header attribute for filename must be inputted as data within the record so it is reachable by the JavaScript evaluator. The downside this is that you always have a column with filename and you have to remember to ignore it when populating Values to output.",
        "label" : "Add field for filename",
        "xPos" : 283,
        "yPos" : 50,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_origin_spooldir_SpoolDirDSource_01OutputLane14656964692430" ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor_01OutputLane14669864202300" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_processor_javascript_JavaScriptDProcessor_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_javascript_JavaScriptDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "processingMode",
        "value" : "BATCH"
      }, {
        "name" : "script",
        "value" : "function stringToNum(number){\n    var out = parseFloat(number.toString().replace(',',''));\n    return out;\n}\nfunction outputRecord(record, indicator, country, date, value){\n    if(parseFloat(value).isNaN()){ // if the value is a string, then output value as string\n        record.value = { \n            '${ID}' : indicator.toString(),\n            '${CT}' : country.toString(),\n            '${DT}' : parseInt(date),\n            '${VL}' : value.toString(),\n            'filename' : fn.toString(),\n        };\n    } else { // otherwise, replace commas with nil and parseFloat() the value\n        record.value = { \n            '${ID}' : indicator.toString(),\n            '${CT}' : country.toString(),\n            '${DT}' : parseInt(date),\n            '${VL}' : stringToNum(value),\n            'filename' : fn.toString(),\n        };\n    }\n    output.write(record);\n}\nfunction ONI(){\n    function writeRecords(Values, year, country, cc){\n        for(key in Values){\n            var value = Values[key];\n            // value : Political Score\n            // key   : indicator\n            var ind;\n            switch(key){\n                case 'political_score':\n                    ind = \"ONIp\";\n                    break;\n                case 'social_score':\n                    ind = \"ONIs\";\n                    break;\n                case 'tools_score':\n                    ind = \"ONIit\";\n                    break;\n                case 'conflict/security_score':\n                    ind = \"ONIcs\";\n                    break;\n                case 'transparency':\n                    ind = \"ONItr\";\n                    break;\n                case 'consistency':\n                    ind = \"ONIco\";\n                    break;\n            }\n            outputRecord(records[i], ind, cc, year, value);\n        }\n    }\n\n    var cc = records[i].value['country_code'];\n    var country = records[i].value['country'];\n    var year = records[i].value['testing_date'];\n    var Values = {};\n    for (key in records[i].value){\n        var value = records[i].value[key];\n        if(value != 'n/a' && key != 'filename' && key != 'social_description' && key != 'tools_description' && key != 'conflict_security_description' && key != 'political_description' && key != 'country' && key != 'country_code' && key != 'testing_date' && key != 'url'){\n            Values[key] = value;\n        }\n    }\n    writeRecords(Values, year, country, cc);\n}\nfunction cellsub(){ \n    function writeRecords(Values, country){\n        for(key in Values){\n            var value = Values[key];\n            // value : cellsub\n            // key   : year\n            outputRecord(records[i],'cellsub',country, key, value);\n        }\n    } \n    records[i].value.Values = {};\n    var country  = records[i].value['country'];\n    for(key in records[i].value){\n        var value = records[i].value[key];\n        if(value != \"\" && key > 1950){\n            records[i].value['Values'][key] = value;\n        }\n    }\n    var Values = records[i].value['Values'];\n    writeRecords(Values, country); \n}\nfunction gdp_pop_fixbb(){ \n    function writeRecords(Values, indicator){\n        var ind;\n        switch (indicator){\n            case 'GDP per capita (current US$)':\n                ind = 'gdpcapus';\n                break;\n            case 'GDP per capita, PPP (current international $)':\n                ind = 'gdpcapppp';\n                break;\n            case 'Population, total':\n                ind = 'pop';\n                break; \n            case 'Fixed broadband subscriptions':\n                ind = 'fixbb';\n                break;\n        }\n        for(key in Values){\n            var value = Values[key];\n            // value : gdpcapppp, gdpcapus, or pop\n            // key   : year\n            outputRecord(records[i], ind, records[i].value['${CT}'], key, value);\n        }\n    } \n    var indicator = records[i].value['Indicator Name'];\n    records[i].value.Values = {};\n    records[i].value['${CT}'] = records[i].value['Country Code'];\n    records[i].value['test'] = indicator;\n    for(key in records[i].value){\n        var value = records[i].value[key];\n        if(value != \"\" && key > 1950){\n            records[i].value['Values'][key] = value;\n        }\n    }\n    var Values = records[i].value['Values'];\n    writeRecords(Values, indicator);\n}\nfunction nri1_68(){\n    function writeRecords(Values, year, indicator){\n        for(key in Values){\n            var value = Values[key];\n            // key   : year\n            outputRecord(records[i],'nri'+indicator,key, year, value);\n        }\n    }\n    if(records[i].value['Attribute'] == 'Value'){\n\n        var YR = \"Edition\"; \n        var indicator = \"Placement\";\n\n        // Save Country Data\n        var indicator = records[i].value[indicator];\n        var year = records[i].value[YR];\n\n        records[i].value.Values = {};\n        for(key in records[i].value){\n            var value = records[i].value[key];\n            if(key.length == 3 && value != \"\" && value != 'n/a'){\n                records[i].value['Values'][key] = value;\n            }\n        }\n        // Save the map of values that was originally saved in the Record \n        // Under the 'Values' field\n        var Values = records[i].value['Values'];\n        writeRecords(Values, year, indicator);\n\n    }\n}\nfunction ipr_mf(){\n    function writeRecords(Values, year, country){\n        for(key in Values){\n            var value = Values[key];\n            var indicator;\n\n            if(key == 'Male'){\n                indicator = 'ipr_m'; \n            } else {\n                indicator = 'ipr_f';\n            }\n\n            outputRecord(records[i], indicator, country, year, value);\n        }\n    }\n    // Save Country Data\n    var year = records[i].value['year'];\n    var country = records[i].value['country'];\n\n    var Values = {};\n    for(key in records[i].value){\n        var value = records[i].value[key];\n        if(key != 'filename' && key != 'country' && key != 'year'){\n            Values[key] = value;\n        }\n    }\n    // Save the map of values that was originally saved in the Record \n    // Under the 'Values' field\n    writeRecords(Values, year, country);\n}\nfunction ipr_fixnetsub(){\n    function writeRecords(Values, filename){\n        var indicator;\n        if(filename == 'Fixed_broadband_2000-2014.csv'){\n            indicator = 'fixnetsub';\n        }\n        if(filename == 'Individuals_Internet_2000-2014.csv'){\n            indicator = 'ipr';\n        }\n        for(key in Values){\n            var value = Values[key];\n            // value : ipr, fixnetsub\n            // key   : year\n            outputRecord(records[i], indicator, records[i].value['${CT}'], key, value);\n        }\n    }\n\n    records[i].value.Values = {};\n    records[i].value['${CT}'] = records[i].value['country']; // 1. Alter this line to the column that identifys the Country\n    var filename = records[i].value['filename'];\n    for(key in records[i].value){\n        var value = records[i].value[key];\n        if(value != \"\" && key > 1950){\n            records[i].value['Values'][key] = value;\n        }\n    }\n    var Values = records[i].value['Values'];\n    writeRecords(Values, filename);\n}\nfunction WebIndexData(){\n    function writeRecords(Values){\n        for(key in Values){\n            var value = Values[key];\n            // key   : year\n            outputRecord(records[i], records[i].value['${ID}'], records[i].value['${CT}'], key, value);\n        }\n    }\n    function findIndicator(i){\n        var indicator = \"\";\n        for(key in records[i].value){ // Uses for loop because records are treated as maps (not arrays or lists)\n            switch(key){\n                case \"WB H school life expectancy female/male\": // WB H.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"WB H school life expectancy female/male\"];\n                    indicator = \"wbschoollifeexpfm\";\n                    break;\n                case \"Secondary enrolment rates (gross)\": // WB D.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"Secondary enrolment rates (gross)\"];\n                    indicator = \"secondenroll\";\n                    break;\n                case \"tertiary enrolment rates (gross) female/male\": // WB C.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"tertiary enrolment rates (gross) female/male\"];\n                    indicator = \"wbtertiaryenrollfm\";\n                    break;\n                case \"Secure Internet Servers per million population\": // WB A.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"Secure Internet Servers per million population\"];\n                    indicator = \"secservpermillion\";\n                    break;\n                case \"E-participation index\": // UN D.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"E-participation index\"];\n                    indicator = \"wieparticipation\";\n                    break;\n                case \"Government online services index\": // UN C.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"Government online services index\"];\n                    indicator = \"wigos\";\n                    break;\n                case \"Press Freedom Index\": // RSF A.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"Press Freedom Index\"];\n                    indicator = \"pressfreedom\";\n                    break;\n                case \"IXPs (if have IXPs=1; if not=0)\": // PCH A.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"IXPs (if have IXPs=1; if not=0)\"];\n                    indicator = \"ixp\";\n                    break;\n                case \"Mobile broadband monthly subscription per GDPC\": // ITU S.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"Mobile broadband monthly subscription per GDPC\"];\n                    indicator = \"mbbmonthsubpergdpc\";\n                    break;\n                case \"Freedom House - Freedom of the press\": // FH C.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"Freedom House - Freedom of the press\"];\n                    indicator = \"fhpress\";\n                    break;\n                case \"Freedom House - Civil Rights\": // FH B.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"Freedom House - Civil Rights\"];\n                    indicator = \"fhcivil\";\n                    break;\n                case \"Freedom House - Political Rights\": // FH A.csv\n                    records[i].value[\"${CT}\"] = records[i].value[\"Freedom House - Political Rights\"];\n                    indicator = \"fhpolitical\";\n                    break;\n            }\n            return indicator;\n        }\n    }\n    var indicator = \"\";\n    indicator = findIndicator(i);\n    records[i].value[\"${ID}\"] = indicator;\n\n    records[i].value.Values = {};\n    for (key in records[i].value){\n        var value = records[i].value[key];\n        if(key > 2000 && value != '..' && value != \"\"){\n            records[i].value['Values'][key] = value;\n        }\n    }\n    var Values = records[i].value['Values'];\n    writeRecords(Values); // will write errors when there are no values in the Values map (ie. '..' and '')\n}\nfunction WebIndexSurvey(){\n    function writeRecords(Values, country){\n        var regex1 = new RegExp(\"[A-Z]{2,3}\");\n        var regex2 = new RegExp(\"[0-9]{4}\");\n        var regex3 = new RegExp(\"[A-Z][0-9]+\");\n        for(key in Values){\n            var value = Values[key];\n            // value : survey score\n            var year = regex2.exec(key); // grab year from key\n            var indicator = regex1.exec(key) + regex3.exec(key); // grab correct format of indicator from key\n            outputRecord(records[i], indicator.toLowerCase(), country, year, value);\n        }\n    } \n    var country = records[i].value['Country'];\n    var Values = {};\n    for (key in records[i].value){\n        var value = records[i].value[key];\n        if(key != 'Country' && key != 'filename'){\n            Values[key] = value;\n        }\n    }\n    writeRecords(Values, country);\n}\nfunction WebIndexScores(){\n    function writeRecords(Values, Countries){\n        var regex = new RegExp(\".+?(?=-)\");\n        for(key in Values){\n            var value = Values[key];\n            var country = Countries[key];\n            var indicator;\n            switch(key){\n                case 'Universal Access':\n                    indicator = 'wiuniversalaccess';\n                    break;\n                case 'Freedom & Openness':\n                    indicator = 'wifreedom';\n                    break;\n                case 'Relevant content':\n                    indicator = 'wirelevantcontent';\n                    break;\n                case 'Empowerment':\n                    indicator = 'wiempowerment';\n                    break;\n                case 'Communications Infrastructure':\n                    indicator = 'wiinfrastructure';\n                    break;\n                case 'Access & Affordability':\n                    indicator = 'wiaccess';\n                    break;\n                case 'Education and Awareness':\n                    indicator = 'wieducation';\n                    break;\n                case 'Free & Open':\n                    indicator = 'wifreeopen';\n                    break;\n                case 'Content & use':\n                    indicator = 'wicontent';\n                    break;\n                case 'Economic':\n                    indicator = 'wieconomic';\n                    break;\n                case 'Political':\n                    indicator = 'wipolitical';\n                    break;\n                case 'Social and Environmental':\n                    indicator = 'wisocial';\n                    break;\n                case 'Overall score':\n                    indicator = 'wiscore';\n                    break;\n                case 'Overall rank':\n                    indicator = 'wirank';\n                    break;\n            }\n            // value : country scores\n            outputRecord(records[i], indicator, country, 2014, value);\n        }\n    } \n    var regex = new RegExp(\".+?(?=-)\");\n    var Countries = {}; // Key is indicator and value is country\n    var Values = {};\n    for(key in records[i].value){\n        var value = records[i].value[key];\n        if(key != 'filename'){\n            if(regex.test(key)){\n                var indicator = regex.exec(key);\n                Countries[indicator] = value;\n            } else {\n                Values[key] = value;\n            }\n        }\n    }\n    writeRecords(Values, Countries);\n}\nfunction hhnet(){\n    var record = records[i];\n    var value = record.value['value'];\n    var date = record.value['date'];\n    var country = record.value['country'];\n    if(value != \"\"){\n        outputRecord(record, 'hhnet', country, date, value);\n    }\n}\nfunction FOTN(){\n    var country = records[i].value['Country'];\n    var regex = new RegExp(\"[0-9]{4}\");\n    var Values = {}; \n    for(key in records[i].value){ // Settings a 'Values' key map in records[i] will cause there to be a [object Object] variable included in the for loop\n        var value = records[i].value[key];\n        if(key != 'filename' && key != 'Country'){\n            Values[key] = value;\n        }\n    }\n    for(key in Values){\n        var value = Values[key];\n        var ind;\n        switch(key){ // had to change file headers to make them consistent\n            case 'Internet Freedom Status':\n                ind = 'FOTNs';\n                break;\n            case 'Internet Freedom Total Score':\n                ind = 'FOTNt';\n                break;\n            case 'A: Obstacles to Access':\n                 ind = 'FOTNo';\n                 break;\n            case 'B: Limits on Content':\n                 ind = 'FOTNl';\n                 break;\n            case 'C: Violations of User Rights':\n                 ind = 'FOTNv';\n                 break;\n        } \n        outputRecord(records[i], ind, country, regex.exec(records[i].value['filename']), value);\n    }\n}\nfunction HDI(){\n    function writeRecords(Values){\n        for(key in Values){\n            var value = Values[key];\n            var ind; \n            if(key == 'rank'){\n                ind = 'HDIr';\n                key = '2014';\n            } else {\n                ind = 'HDI';\n            }\n            outputRecord(records[i], ind, records[i].value['${CT}'], key, value);\n        }\n    } \n    var Values = {};\n    records[i].value['${CT}'] = records[i].value['country'];\n    for(key in records[i].value){\n        var value = records[i].value[key];\n        if(value != \"..\" && value != \"\" && key != 'country' && key != 'filename'){\n            Values[key] = value;\n        }\n    }\n    records[i].value['Values'] = Values;\n    writeRecords(Values);\n}\nfunction bbcost_updownr(){\n    function writeRecords(Values){ \n        for(key in Values){\n            var year;\n            if(fn == 'BB pricing 9March2016 (1).csv' || fn == 'updownr_IM_AccessIndexData_INTERNAL_2016-01-12.csv'){\n                year = 2015;\n                if(key == 'bbcostindex'){\n                    value = (1-value);\n                }\n            } else {\n                year = 2014;\n            }\n            var value = Values[key] \n            if(key == 'uploadkbps' || key == 'downloadkbps'){\n                outputRecord(records[i], key.replace(\"kbps\",\"mbps\"), country, year, ( stringToNum(value) / 1000) );\n                outputRecord(records[i], key, country, year, value);\n            } else if (key == 'uploadmbps' || key == 'downloadmbps'){\n                outputRecord(records[i], key.replace(\"mbps\",\"kbps\"), country, year, ( stringToNum(value) * 1000) );\n                outputRecord(records[i], key, country, year, value);\n            } else {\n                outputRecord(records[i], key, country, year, value);\n            }\n        }\n    } \n    var country = records[i].value['country'];\n    var Values = {};\n    for(key in records[i].value){\n        var value = records[i].value[key];\n        if(key != 'filename' && value != '' && key != 'country'){\n            Values[key] = value;\n        }\n    }\n    writeRecords(Values);\n}\nfunction Akamai(){\n    function writeRecords(Values){ \n        for(key in Values){\n            var value = Values[key];\n            var regexYear = new RegExp(\"[0-9]{4}\");\n            var year = regexYear.exec(fn);\n            if(key == 'speedmbps' || key == 'peakspeedmbps'){\n                outputRecord(records[i], key.replace(\"mbps\",\"kbps\"), country, year, (value * 1000))\n                outputRecord(records[i], key, country, year, value);\n            } else {\n                outputRecord(records[i], key, country, year, value);\n            }\n        }\n    } \n    var country = records[i].value['country'];\n    var Values = {};\n    for(key in records[i].value){\n        var value = records[i].value[key];\n        if(key != 'filename' && value != '' && key != 'country'){\n            Values[key] = value;\n        }\n    }\n    writeRecords(Values);\n}\nfunction litrate_ed(){\n    function writeRecords(Values){ \n        for(key in Values){\n            var value = Values[key] \n                outputRecord(records[i], key, country, year, value);\n        }\n    } \n    var year = records[i].value['year']\n    var country = records[i].value['country'];\n    var Values = {};\n    for(key in records[i].value){\n        var value = records[i].value[key];\n        if(value != '..' && key != 'year' && key != 'filename' && value != '' && key != 'country'){\n            Values[key] = value;\n        }\n    }\n    writeRecords(Values);\n}\n// ____________________________________________________\n// This code runs the logic for which script to run\nfor(var i = 0; i < records.length; i++) {\n    var fn = records[i].value['filename'];\n    var regexWI = new RegExp(\"([A-Z]{2})[A-Z]?[^A-Z][A-Z].csv\");\n    var regexFOTN = new RegExp(\"FOTN [0-9]{4}.csv\");\n    var regexAkamai = new RegExp(\"tabula-akamai-state-of-the-internet-report-[a-z|0-9]{2}-[0-9]{4}.csv\")\n    try {\n        switch(true){\n            case (fn == 'Mobile_cellular_2000-2014.csv'):\n                cellsub();\n                break;\n            case (fn == 'oni_country_data_2013-09-20.csv'):\n                ONI();\n                break;\n            case (fn == 'API_NY.GDP.PCAP.CD_DS2_en_csv_v2.csv' || fn == 'API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2.csv' || fn == 'API_SP.POP.TOTL_DS2_en_csv_v2.csv' || fn == 'API_IT.NET.BBND_DS2_en_csv_v2.csv'):\n                gdp_pop_fixbb();\n                break;\n            case (fn == 'WEF_NRI_2012-2015_Historical_Dataset.csv'):\n                nri1_68();\n                break;\n            case (fn == 'Gender_2010-2014.csv'):\n                ipr_mf();\n                break;\n            case (fn == 'Individuals_Internet_2000-2014.csv' || fn == 'Fixed_broadband_2000-2014.csv'):\n                ipr_fixnetsub();\n                break;\n            case (regexWI.test(fn)):\n                WebIndexData();\n                break;\n            case (fn == 'Survey Scores Primary Raw Data.csv'):\n                WebIndexSurvey();\n                break;\n            case (fn == 'Ranks & Scores.csv'):\n                WebIndexScores();\n                break;\n            case (fn == 'CoreHouseholdIndicator.csv'):\n                hhnet();\n                break;\n            case (regexFOTN.test(fn)):\n                FOTN();\n                break; \n            case (fn == 'tabula-2015_human_development_report.csv'):\n                HDI();\n                break;\n            case (fn == 'bbcost_IM_AccessIndexData_2014-07-01.csv' || fn == 'BB pricing 9March2016 (1).csv' || fn == 'bbcostindexnew_IM_AccessIndexData_INTERNAL_2016-01-12.csv' || fn == 'updownr_IM_AccessIndexData_2014-07-01.csv' || fn == 'updownr_IM_AccessIndexData_INTERNAL_2016-01-12.csv'):\n                bbcost_updownr();\n                break;\n            case(regexAkamai.test(fn)):\n                Akamai();\n                break;\n            case(fn == 'litrate.csv' || fn == 'litrate_IM_AccessIndexData_2014-07-01.csv' || fn == '2015_Statistical_Annex_Table_5.csv'):\n                litrate_ed();\n                break;\n        }\n    } catch (e) {\n        // Send record to error\n        error.write(records[i], e);\n    }\n}"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Transform",
        "xPos" : 502,
        "yPos" : 45,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor_01OutputLane14669864202300" ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_processor_javascript_JavaScriptDProcessor_01OutputLane14669871177140" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor_02",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "expressionProcessorConfigs",
        "value" : [ {
          "fieldToSet" : "/",
          "expression" : "${record:value('/')}"
        } ]
      }, {
        "name" : "headerAttributeConfigs",
        "value" : [ ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "List to List-Map converter",
        "xPos" : 721,
        "yPos" : 51,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_processor_javascript_JavaScriptDProcessor_01OutputLane14669871177140" ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor_02OutputLane14677778287160" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_destination_localfilesystem_LocalFileSystemDTarget_07",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_localfilesystem_LocalFileSystemDTarget",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "configs.uniquePrefix",
        "value" : "out_"
      }, {
        "name" : "configs.dirPathTemplateInHeader",
        "value" : false
      }, {
        "name" : "configs.dirPathTemplate",
        "value" : "${destination}"
      }, {
        "name" : "configs.timeZoneID",
        "value" : "UTC"
      }, {
        "name" : "configs.timeDriver",
        "value" : "${time:now()}"
      }, {
        "name" : "configs.maxRecordsPerFile",
        "value" : 0
      }, {
        "name" : "configs.maxFileSize",
        "value" : 0
      }, {
        "name" : "configs.idleTimeout",
        "value" : "${1 * HOURS}"
      }, {
        "name" : "configs.compression",
        "value" : "NONE"
      }, {
        "name" : "configs.otherCompression",
        "value" : null
      }, {
        "name" : "configs.keyEl",
        "value" : "${uuid()}"
      }, {
        "name" : "configs.lateRecordsLimit",
        "value" : "${1 * HOURS}"
      }, {
        "name" : "configs.rollIfHeader",
        "value" : false
      }, {
        "name" : "configs.rollHeaderName",
        "value" : "roll"
      }, {
        "name" : "configs.lateRecordsAction",
        "value" : "SEND_TO_ERROR"
      }, {
        "name" : "configs.lateRecordsDirPathTemplate",
        "value" : "/tmp/late/${YYYY()}-${MM()}-${DD()}"
      }, {
        "name" : "configs.dataFormat",
        "value" : "DELIMITED"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvHeader",
        "value" : "WITH_HEADER"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvReplaceNewLines",
        "value" : true
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvReplaceNewLinesString",
        "value" : ""
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "configs.dataGeneratorFormatConfig.jsonMode",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.textFieldPath",
        "value" : "/"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.textEmptyLineIfNull",
        "value" : false
      }, {
        "name" : "configs.dataGeneratorFormatConfig.avroSchemaInHeader",
        "value" : true
      }, {
        "name" : "configs.dataGeneratorFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "configs.dataGeneratorFormatConfig.avroCompression",
        "value" : "NULL"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.binaryFieldPath",
        "value" : "/"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "configs.dataGeneratorFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "output",
        "xPos" : 940,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor_02OutputLane14677778287160" ],
      "outputLanes" : [ ]
    } ],
    "errorStage" : {
      "instanceName" : "com_streamsets_pipeline_stage_destination_recordstolocalfilesystem_ToErrorLocalFSDTarget_ErrorStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_recordstolocalfilesystem_ToErrorLocalFSDTarget",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "directory",
        "value" : "${error}"
      }, {
        "name" : "uniquePrefix",
        "value" : "sdc-${sdc:id()}"
      }, {
        "name" : "rotationIntervalSecs",
        "value" : "${1 * HOURS}"
      }, {
        "name" : "maxFileSizeMbs",
        "value" : 512
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Error Records - Write to File",
        "xPos" : 1380,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ]
    },
    "info" : {
      "name" : "IM_CSV",
      "description" : "",
      "created" : 1467741487461,
      "lastModified" : 1468709558688,
      "creator" : "admin",
      "lastModifier" : "admin",
      "lastRev" : "0",
      "uuid" : "2daebbbf-3aba-479f-aef3-e31d3d562a62",
      "valid" : true,
      "metadata" : {
        "labels" : [ ]
      }
    },
    "metadata" : {
      "labels" : [ ]
    },
    "statsAggregatorStage" : {
      "instanceName" : "com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget_StatsAggregatorStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Stats Aggregator - Discard",
        "xPos" : 510,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ]
    },
    "issues" : {
      "pipelineIssues" : [ ],
      "stageIssues" : { },
      "issueCount" : 0
    },
    "valid" : true,
    "previewable" : true
  },
  "pipelineRules" : {
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Bad Records",
      "metricId" : "pipeline.batchErrorRecords.meter",
      "metricType" : "METER",
      "metricElement" : "METER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1465696450113,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Error Messages",
      "metricId" : "pipeline.batchErrorMessages.meter",
      "metricType" : "METER",
      "metricElement" : "METER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1465696450113,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1465696450113,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1465696450113,
      "valid" : true
    }, {
      "id" : "memoryLimitAlertID",
      "alertText" : "Memory limit for pipeline exceeded",
      "metricId" : "pipeline.memoryConsumed.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > (jvm:maxMemoryMB() * 0.65)}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1465696450113,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "emailIds" : [ ],
    "uuid" : "f9947779-fd78-49f6-9172-3f102dbd3f5e",
    "ruleIssues" : [ ]
  },
  "libraryDefinitions" : {
    "pipeline" : [ {
      "configDefinitions" : [ {
        "name" : "executionMode",
        "type" : "MODEL",
        "defaultValue" : "STANDALONE",
        "description" : "",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Execution Mode",
        "group" : "",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ ],
        "elConstantDefinitionsIdx" : [ ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "STANDALONE", "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING", "CLUSTER_MESOS_STREAMING" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.datacollector.config.ExecutionModeChooserValues",
          "labels" : [ "Standalone", "Cluster Batch", "Cluster Yarn Streaming", "Cluster Mesos Streaming" ]
        },
        "lines" : 0,
        "displayPosition" : 10,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "executionMode",
        "max" : 9223372036854775807
      }, {
        "name" : "deliveryGuarantee",
        "type" : "MODEL",
        "defaultValue" : "AT_LEAST_ONCE",
        "description" : "",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Delivery Guarantee",
        "group" : "",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ ],
        "elConstantDefinitionsIdx" : [ ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "AT_LEAST_ONCE", "AT_MOST_ONCE" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.datacollector.config.DeliveryGuaranteeChooserValues",
          "labels" : [ "At Least Once", "At Most Once" ]
        },
        "lines" : 0,
        "displayPosition" : 20,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "deliveryGuarantee",
        "max" : 9223372036854775807
      }, {
        "name" : "shouldRetry",
        "type" : "BOOLEAN",
        "defaultValue" : true,
        "description" : "",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Retry Pipeline on Error",
        "group" : "",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ ],
        "elConstantDefinitionsIdx" : [ ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 30,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "shouldRetry",
        "max" : 9223372036854775807
      }, {
        "name" : "retryAttempts",
        "type" : "NUMBER",
        "defaultValue" : -1,
        "description" : "Max no of retries. To retry indefinitely, use -1. The wait time between retries starts at 15 seconds and doubles until reaching 5 minutes.",
        "dependsOn" : "shouldRetry",
        "triggeredByValues" : [ true ],
        "label" : "Retry Attempts",
        "group" : "",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 30,
        "dependsOnMap" : {
          "shouldRetry" : [ true ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "retryAttempts",
        "max" : 9223372036854775807
      }, {
        "name" : "memoryLimit",
        "type" : "NUMBER",
        "defaultValue" : "${jvm:maxMemoryMB() * 0.65}",
        "description" : "Maximum amount of memory the pipeline can use. Configure in relationship to the SDC Java heap size. The default is 650 and a value of 0 or less disables the limit.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Max Pipeline Memory (MB)",
        "group" : "",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 60,
        "dependsOnMap" : null,
        "min" : 128,
        "evaluation" : "IMPLICIT",
        "fieldName" : "memoryLimit",
        "max" : 9223372036854775807
      }, {
        "name" : "memoryLimitExceeded",
        "type" : "MODEL",
        "defaultValue" : "STOP_PIPELINE",
        "description" : "Behavior when the pipeline exceeds the memory limit. Tip: Configure an alert to indicate when the memory use approaches the limit.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "On Memory Exceeded",
        "group" : "",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ ],
        "elConstantDefinitionsIdx" : [ ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "LOG", "ALERT", "STOP_PIPELINE" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.datacollector.config.MemoryLimitExceededChooserValues",
          "labels" : [ "Log", "Log and alert", "Log, alert and stop pipeline" ]
        },
        "lines" : 0,
        "displayPosition" : 70,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "memoryLimitExceeded",
        "max" : 9223372036854775807
      }, {
        "name" : "notifyOnStates",
        "type" : "MODEL",
        "defaultValue" : [ "RUN_ERROR", "STOPPED", "FINISHED" ],
        "description" : "Notifies via email when pipeline gets to the specified states",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Notify on Pipeline State Changes",
        "group" : "",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ ],
        "elConstantDefinitionsIdx" : [ ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "RUNNING", "START_ERROR", "RUN_ERROR", "STOPPED", "FINISHED", "DISCONNECTED", "CONNECTING" ],
          "configDefinitions" : null,
          "modelType" : "MULTI_VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.datacollector.config.PipelineStateChooserValues",
          "labels" : [ "Running", "Start Error", "Run Error", "Stopped", "Finished", "Disconnected", "Connecting" ]
        },
        "lines" : 0,
        "displayPosition" : 75,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "notifyOnStates",
        "max" : 9223372036854775807
      }, {
        "name" : "emailIDs",
        "type" : "LIST",
        "defaultValue" : [ ],
        "description" : "Email Addresses",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Email IDs",
        "group" : "",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 76,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "emailIDs",
        "max" : 9223372036854775807
      }, {
        "name" : "constants",
        "type" : "MAP",
        "defaultValue" : [ ],
        "description" : "",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Constants",
        "group" : "CONSTANTS",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 80,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "constants",
        "max" : 9223372036854775807
      }, {
        "name" : "badRecordsHandling",
        "type" : "MODEL",
        "defaultValue" : null,
        "description" : "",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Error Records",
        "group" : "BAD_RECORDS",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ ],
        "elConstantDefinitionsIdx" : [ ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1", "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_sdcipc_ToErrorSdcIpcDTarget::1", "streamsets-datacollector-elasticsearch_1_4-lib::com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget::3", "streamsets-datacollector-elasticsearch_1_5-lib::com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget::3", "streamsets-datacollector-elasticsearch_1_6-lib::com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget::3", "streamsets-datacollector-elasticsearch_1_7-lib::com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget::3", "streamsets-datacollector-elasticsearch_2_0-lib::com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget::3", "streamsets-datacollector-elasticsearch_2_1-lib::com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget::3", "streamsets-datacollector-elasticsearch_2_2-lib::com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget::3", "streamsets-datacollector-elasticsearch_2_3-lib::com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget::3", "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_recordstolocalfilesystem_ToErrorLocalFSDTarget::1", "streamsets-datacollector-apache-kafka_0_8_1-lib::com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget::2", "streamsets-datacollector-apache-kafka_0_8_2-lib::com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget::2", "streamsets-datacollector-apache-kafka_0_9-lib::com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget::2", "streamsets-datacollector-cdh_5_7-cluster-cdh_kafka_2_0-lib::com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget::2", "streamsets-datacollector-cdh_kafka_1_2-lib::com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget::2", "streamsets-datacollector-cdh_kafka_1_3-lib::com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget::2", "streamsets-datacollector-hdp_2_2-lib::com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget::2", "streamsets-datacollector-hdp_2_3-lib::com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget::2", "streamsets-datacollector-hdp_2_4-lib::com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget::2" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.datacollector.config.ErrorHandlingChooserValues",
          "labels" : [ "Discard (Library: Basic)", "Write to Another Pipeline (Library: Basic)", "Write to Elasticsearch (Library: Elasticsearch 1.4.5)", "Write to Elasticsearch (Library: Elasticsearch 1.5.2)", "Write to Elasticsearch (Library: Elasticsearch 1.6.2)", "Write to Elasticsearch (Library: Elasticsearch 1.7.4)", "Write to Elasticsearch (Library: Elasticsearch 2.0.2)", "Write to Elasticsearch (Library: Elasticsearch 2.1.2)", "Write to Elasticsearch (Library: Elasticsearch 2.2.2)", "Write to Elasticsearch (Library: Elasticsearch 2.3.1)", "Write to File (Library: Basic)", "Write to Kafka (Library: Apache Kafka 0.8.1.1)", "Write to Kafka (Library: Apache Kafka 0.8.2.1)", "Write to Kafka (Library: Apache Kafka 0.9.0.0)", "Write to Kafka (Library: CDH 5.7.0 Cluster Kafka 2.0.1 Lib)", "Write to Kafka (Library: CDH Kafka 1.2.0 (0.8.2.0))", "Write to Kafka (Library: CDH Kafka 1.3.2 (0.8.2.0))", "Write to Kafka (Library: HDP 2.2.0)", "Write to Kafka (Library: HDP 2.3.0)", "Write to Kafka (Library: HDP 2.4.0)" ]
        },
        "lines" : 0,
        "displayPosition" : 90,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "badRecordsHandling",
        "max" : 9223372036854775807
      }, {
        "name" : "statsAggregatorStage",
        "type" : "MODEL",
        "defaultValue" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget::1",
        "description" : "",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Statistics Aggregator",
        "group" : "STATS",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ ],
        "elConstantDefinitionsIdx" : [ ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget::1", "streamsets-datacollector-aws-lib::com_streamsets_pipeline_stage_destination_kinesis_StatsKinesisDTarget::3", "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_recordstolocalfilesystem_StatsLocalFSDTarget::1", "streamsets-datacollector-apache-kafka_0_8_1-lib::com_streamsets_pipeline_stage_destination_kafka_StatsKafkaDTarget::2", "streamsets-datacollector-apache-kafka_0_8_2-lib::com_streamsets_pipeline_stage_destination_kafka_StatsKafkaDTarget::2", "streamsets-datacollector-apache-kafka_0_9-lib::com_streamsets_pipeline_stage_destination_kafka_StatsKafkaDTarget::2", "streamsets-datacollector-cdh_5_7-cluster-cdh_kafka_2_0-lib::com_streamsets_pipeline_stage_destination_kafka_StatsKafkaDTarget::2", "streamsets-datacollector-cdh_kafka_1_2-lib::com_streamsets_pipeline_stage_destination_kafka_StatsKafkaDTarget::2", "streamsets-datacollector-cdh_kafka_1_3-lib::com_streamsets_pipeline_stage_destination_kafka_StatsKafkaDTarget::2", "streamsets-datacollector-hdp_2_2-lib::com_streamsets_pipeline_stage_destination_kafka_StatsKafkaDTarget::2", "streamsets-datacollector-hdp_2_3-lib::com_streamsets_pipeline_stage_destination_kafka_StatsKafkaDTarget::2", "streamsets-datacollector-hdp_2_4-lib::com_streamsets_pipeline_stage_destination_kafka_StatsKafkaDTarget::2" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.datacollector.config.StatsTargetChooserValues",
          "labels" : [ "Discard (Library: Basic)", "Kinesis Producer (Library: Amazon Web Services 1.10.59)", "Write to File (Library: Basic)", "Write to Kafka (Library: Apache Kafka 0.8.1.1)", "Write to Kafka (Library: Apache Kafka 0.8.2.1)", "Write to Kafka (Library: Apache Kafka 0.9.0.0)", "Write to Kafka (Library: CDH 5.7.0 Cluster Kafka 2.0.1 Lib)", "Write to Kafka (Library: CDH Kafka 1.2.0 (0.8.2.0))", "Write to Kafka (Library: CDH Kafka 1.3.2 (0.8.2.0))", "Write to Kafka (Library: HDP 2.2.0)", "Write to Kafka (Library: HDP 2.3.0)", "Write to Kafka (Library: HDP 2.4.0)" ]
        },
        "lines" : 0,
        "displayPosition" : 95,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "statsAggregatorStage",
        "max" : 9223372036854775807
      }, {
        "name" : "clusterSlaveMemory",
        "type" : "NUMBER",
        "defaultValue" : 1024,
        "description" : "",
        "dependsOn" : "executionMode",
        "triggeredByValues" : [ "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING" ],
        "label" : "Worker Memory (MB)",
        "group" : "CLUSTER",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 100,
        "dependsOnMap" : {
          "executionMode" : [ "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "clusterSlaveMemory",
        "max" : 9223372036854775807
      }, {
        "name" : "clusterSlaveJavaOpts",
        "type" : "STRING",
        "defaultValue" : "-XX:PermSize=128M -XX:MaxPermSize=256M -Dlog4j.debug",
        "description" : "Add properties as needed. Changes to default settings are not recommended.",
        "dependsOn" : "executionMode",
        "triggeredByValues" : [ "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING" ],
        "label" : "Worker Java Options",
        "group" : "CLUSTER",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 110,
        "dependsOnMap" : {
          "executionMode" : [ "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "clusterSlaveJavaOpts",
        "max" : 9223372036854775807
      }, {
        "name" : "clusterLauncherEnv",
        "type" : "MAP",
        "defaultValue" : [ ],
        "description" : "Sets additional environment variables for the cluster launcher",
        "dependsOn" : "executionMode",
        "triggeredByValues" : [ "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING" ],
        "label" : "Launcher ENV",
        "group" : "CLUSTER",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 120,
        "dependsOnMap" : {
          "executionMode" : [ "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "clusterLauncherEnv",
        "max" : 9223372036854775807
      }, {
        "name" : "mesosDispatcherURL",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "URL for service which launches Mesos framework",
        "dependsOn" : "executionMode",
        "triggeredByValues" : [ "CLUSTER_MESOS_STREAMING" ],
        "label" : "Mesos Dispatcher URL",
        "group" : "CLUSTER",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 130,
        "dependsOnMap" : {
          "executionMode" : [ "CLUSTER_MESOS_STREAMING" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "mesosDispatcherURL",
        "max" : 9223372036854775807
      }, {
        "name" : "hdfsS3ConfDir",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "An SDC resource directory or symbolic link with HDFS/S3 configuration files core-site.xml and hdfs-site.xml",
        "dependsOn" : "executionMode",
        "triggeredByValues" : [ "CLUSTER_MESOS_STREAMING" ],
        "label" : "Checkpoint Configuration Directory",
        "group" : "CLUSTER",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 150,
        "dependsOnMap" : {
          "executionMode" : [ "CLUSTER_MESOS_STREAMING" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "hdfsS3ConfDir",
        "max" : 9223372036854775807
      }, {
        "name" : "rateLimit",
        "type" : "NUMBER",
        "defaultValue" : 0,
        "description" : "Maximum number of events per second that should be accepted into the pipeline. Rate is not limited if this is not set, or is set to 0",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Rate Limit (records / sec)",
        "group" : "",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 180,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "rateLimit",
        "max" : 9223372036854775807
      } ],
      "configGroupDefinition" : {
        "classNameToGroupsMap" : {
          "com.streamsets.datacollector.config.PipelineGroups" : [ "CONSTANTS", "BAD_RECORDS", "CLUSTER", "STATS" ]
        },
        "groupNameToLabelMapList" : [ {
          "name" : "CONSTANTS",
          "label" : "Constants"
        }, {
          "name" : "BAD_RECORDS",
          "label" : "Error Records"
        }, {
          "name" : "CLUSTER",
          "label" : "Cluster"
        }, {
          "name" : "STATS",
          "label" : "Statistics"
        } ]
      }
    } ],
    "stages" : [ {
      "name" : "com_streamsets_pipeline_stage_origin_spooldir_SpoolDirDSource",
      "type" : "SOURCE",
      "className" : "com.streamsets.pipeline.stage.origin.spooldir.SpoolDirDSource",
      "version" : "7",
      "description" : "Reads files from a directory",
      "privateClassLoader" : false,
      "library" : "streamsets-datacollector-basic-lib",
      "label" : "Directory",
      "libraryLabel" : "Basic",
      "configDefinitions" : [ {
        "name" : "conf.dataFormatConfig.charset",
        "type" : "MODEL",
        "defaultValue" : "UTF-8",
        "description" : "",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "TEXT", "JSON", "DELIMITED", "XML", "LOG" ],
        "label" : "Charset",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "UTF-8", "US-ASCII", "UTF-16", "ISO-8859-1", "IBM-500", "GBK", "Big5", "Big5-HKSCS", "CESU-8", "EUC-JP", "EUC-KR", "GB18030", "GB2312", "IBM-Thai", "IBM00858", "IBM01140", "IBM01141", "IBM01142", "IBM01143", "IBM01144", "IBM01145", "IBM01146", "IBM01147", "IBM01148", "IBM01149", "IBM037", "IBM1026", "IBM1047", "IBM273", "IBM277", "IBM278", "IBM280", "IBM284", "IBM285", "IBM290", "IBM297", "IBM420", "IBM424", "IBM437", "IBM500", "IBM775", "IBM850", "IBM852", "IBM855", "IBM857", "IBM860", "IBM861", "IBM862", "IBM863", "IBM864", "IBM865", "IBM866", "IBM868", "IBM869", "IBM870", "IBM871", "IBM918", "ISO-2022-CN", "ISO-2022-JP", "ISO-2022-JP-2", "ISO-2022-KR", "ISO-8859-13", "ISO-8859-15", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "JIS_X0201", "JIS_X0212-1990", "KOI8-R", "KOI8-U", "Shift_JIS", "TIS-620", "UTF-16BE", "UTF-16LE", "UTF-32", "UTF-32BE", "UTF-32LE", "windows-1250", "windows-1251", "windows-1252", "windows-1253", "windows-1254", "windows-1255", "windows-1256", "windows-1257", "windows-1258", "windows-31j", "x-Big5-HKSCS-2001", "x-Big5-Solaris", "x-COMPOUND_TEXT", "x-euc-jp-linux", "x-EUC-TW", "x-eucJP-Open", "x-IBM1006", "x-IBM1025", "x-IBM1046", "x-IBM1097", "x-IBM1098", "x-IBM1112", "x-IBM1122", "x-IBM1123", "x-IBM1124", "x-IBM1166", "x-IBM1364", "x-IBM1381", "x-IBM1383", "x-IBM300", "x-IBM33722", "x-IBM737", "x-IBM833", "x-IBM834", "x-IBM856", "x-IBM874", "x-IBM875", "x-IBM921", "x-IBM922", "x-IBM930", "x-IBM933", "x-IBM935", "x-IBM937", "x-IBM939", "x-IBM942", "x-IBM942C", "x-IBM943", "x-IBM943C", "x-IBM948", "x-IBM949", "x-IBM949C", "x-IBM950", "x-IBM964", "x-IBM970", "x-ISCII91", "x-ISO-2022-CN-CNS", "x-ISO-2022-CN-GB", "x-iso-8859-11", "x-JIS0208", "x-JISAutoDetect", "x-Johab", "x-MacArabic", "x-MacCentralEurope", "x-MacCroatian", "x-MacCyrillic", "x-MacDingbat", "x-MacGreek", "x-MacHebrew", "x-MacIceland", "x-MacRoman", "x-MacRomania", "x-MacSymbol", "x-MacThai", "x-MacTurkish", "x-MacUkraine", "x-MS932_0213", "x-MS950-HKSCS", "x-MS950-HKSCS-XP", "x-mswin-936", "x-PCK", "x-SJIS_0213", "x-UTF-16LE-BOM", "X-UTF-32BE-BOM", "X-UTF-32LE-BOM", "x-windows-50220", "x-windows-50221", "x-windows-874", "x-windows-949", "x-windows-950", "x-windows-iso2022jp" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.CharsetChooserValues",
          "labels" : [ "UTF-8", "US-ASCII", "UTF-16", "ISO-8859-1", "IBM-500", "GBK", "Big5", "Big5-HKSCS", "CESU-8", "EUC-JP", "EUC-KR", "GB18030", "GB2312", "IBM-Thai", "IBM00858", "IBM01140", "IBM01141", "IBM01142", "IBM01143", "IBM01144", "IBM01145", "IBM01146", "IBM01147", "IBM01148", "IBM01149", "IBM037", "IBM1026", "IBM1047", "IBM273", "IBM277", "IBM278", "IBM280", "IBM284", "IBM285", "IBM290", "IBM297", "IBM420", "IBM424", "IBM437", "IBM500", "IBM775", "IBM850", "IBM852", "IBM855", "IBM857", "IBM860", "IBM861", "IBM862", "IBM863", "IBM864", "IBM865", "IBM866", "IBM868", "IBM869", "IBM870", "IBM871", "IBM918", "ISO-2022-CN", "ISO-2022-JP", "ISO-2022-JP-2", "ISO-2022-KR", "ISO-8859-13", "ISO-8859-15", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "JIS_X0201", "JIS_X0212-1990", "KOI8-R", "KOI8-U", "Shift_JIS", "TIS-620", "UTF-16BE", "UTF-16LE", "UTF-32", "UTF-32BE", "UTF-32LE", "windows-1250", "windows-1251", "windows-1252", "windows-1253", "windows-1254", "windows-1255", "windows-1256", "windows-1257", "windows-1258", "windows-31j", "x-Big5-HKSCS-2001", "x-Big5-Solaris", "x-COMPOUND_TEXT", "x-euc-jp-linux", "x-EUC-TW", "x-eucJP-Open", "x-IBM1006", "x-IBM1025", "x-IBM1046", "x-IBM1097", "x-IBM1098", "x-IBM1112", "x-IBM1122", "x-IBM1123", "x-IBM1124", "x-IBM1166", "x-IBM1364", "x-IBM1381", "x-IBM1383", "x-IBM300", "x-IBM33722", "x-IBM737", "x-IBM833", "x-IBM834", "x-IBM856", "x-IBM874", "x-IBM875", "x-IBM921", "x-IBM922", "x-IBM930", "x-IBM933", "x-IBM935", "x-IBM937", "x-IBM939", "x-IBM942", "x-IBM942C", "x-IBM943", "x-IBM943C", "x-IBM948", "x-IBM949", "x-IBM949C", "x-IBM950", "x-IBM964", "x-IBM970", "x-ISCII91", "x-ISO-2022-CN-CNS", "x-ISO-2022-CN-GB", "x-iso-8859-11", "x-JIS0208", "x-JISAutoDetect", "x-Johab", "x-MacArabic", "x-MacCentralEurope", "x-MacCroatian", "x-MacCyrillic", "x-MacDingbat", "x-MacGreek", "x-MacHebrew", "x-MacIceland", "x-MacRoman", "x-MacRomania", "x-MacSymbol", "x-MacThai", "x-MacTurkish", "x-MacUkraine", "x-MS932_0213", "x-MS950-HKSCS", "x-MS950-HKSCS-XP", "x-mswin-936", "x-PCK", "x-SJIS_0213", "x-UTF-16LE-BOM", "X-UTF-32BE-BOM", "X-UTF-32LE-BOM", "x-windows-50220", "x-windows-50221", "x-windows-874", "x-windows-949", "x-windows-950", "x-windows-iso2022jp" ]
        },
        "lines" : 0,
        "displayPosition" : 300,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "TEXT", "JSON", "DELIMITED", "XML", "LOG" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "charset",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.removeCtrlChars",
        "type" : "BOOLEAN",
        "defaultValue" : false,
        "description" : "Use only if required as it impacts reading performance",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Ignore Control Characters",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 310,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "removeCtrlChars",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.compression",
        "type" : "MODEL",
        "defaultValue" : "NONE",
        "description" : "Compression formats gzip, bzip2, xz, lzma, Pack200, DEFLATE and Z are supported. Archive formats 7z, ar, arj, cpio, dump, tar and zip are supported.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Compression Format",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "NONE", "COMPRESSED_FILE", "ARCHIVE", "COMPRESSED_ARCHIVE" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.CompressionChooserValues",
          "labels" : [ "None", "Compressed File", "Archive", "Compressed Archive" ]
        },
        "lines" : 0,
        "displayPosition" : 320,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "compression",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.filePatternInArchive",
        "type" : "STRING",
        "defaultValue" : "*",
        "description" : "A glob or regular expression that defines the pattern of the file names within the compressed directory.",
        "dependsOn" : "conf.dataFormatConfig.compression",
        "triggeredByValues" : [ "ARCHIVE", "COMPRESSED_ARCHIVE" ],
        "label" : "File Name Pattern within Compressed Directory",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 330,
        "dependsOnMap" : {
          "conf.dataFormatConfig.compression" : [ "ARCHIVE", "COMPRESSED_ARCHIVE" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "filePatternInArchive",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.textMaxLineLen",
        "type" : "NUMBER",
        "defaultValue" : 1024,
        "description" : "Longer lines are truncated",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "TEXT" ],
        "label" : "Max Line Length",
        "group" : "TEXT",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 340,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "TEXT" ]
        },
        "min" : 1,
        "evaluation" : "IMPLICIT",
        "fieldName" : "textMaxLineLen",
        "max" : 2147483647
      }, {
        "name" : "conf.dataFormatConfig.jsonContent",
        "type" : "MODEL",
        "defaultValue" : "MULTIPLE_OBJECTS",
        "description" : "",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "JSON" ],
        "label" : "JSON Content",
        "group" : "JSON",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "ARRAY_OBJECTS", "MULTIPLE_OBJECTS" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.JsonModeChooserValues",
          "labels" : [ "JSON array of objects", "Multiple JSON objects" ]
        },
        "lines" : 0,
        "displayPosition" : 350,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "JSON" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "jsonContent",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.jsonMaxObjectLen",
        "type" : "NUMBER",
        "defaultValue" : 4096,
        "description" : "Larger objects are not processed",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "JSON" ],
        "label" : "Max Object Length (chars)",
        "group" : "JSON",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 360,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "JSON" ]
        },
        "min" : 1,
        "evaluation" : "IMPLICIT",
        "fieldName" : "jsonMaxObjectLen",
        "max" : 2147483647
      }, {
        "name" : "conf.dataFormatConfig.csvFileFormat",
        "type" : "MODEL",
        "defaultValue" : "CSV",
        "description" : "",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "DELIMITED" ],
        "label" : "Delimiter Format Type",
        "group" : "DELIMITED",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "CSV", "RFC4180", "EXCEL", "MYSQL", "TDF", "CUSTOM" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.CsvModeChooserValues",
          "labels" : [ "Default CSV (ignores empty lines)", "RFC4180 CSV", "MS Excel CSV", "MySQL CSV", "Tab Separated Values", "Custom" ]
        },
        "lines" : 0,
        "displayPosition" : 370,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "DELIMITED" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvFileFormat",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.csvHeader",
        "type" : "MODEL",
        "defaultValue" : "NO_HEADER",
        "description" : "",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "DELIMITED" ],
        "label" : "Header Line",
        "group" : "DELIMITED",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "WITH_HEADER", "IGNORE_HEADER", "NO_HEADER" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.CsvHeaderChooserValues",
          "labels" : [ "With Header Line", "Ignore Header Line", "No Header Line" ]
        },
        "lines" : 0,
        "displayPosition" : 380,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "DELIMITED" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvHeader",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.csvMaxObjectLen",
        "type" : "NUMBER",
        "defaultValue" : 1024,
        "description" : "Larger objects are not processed",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "DELIMITED" ],
        "label" : "Max Record Length (chars)",
        "group" : "DELIMITED",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 390,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "DELIMITED" ]
        },
        "min" : 1,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvMaxObjectLen",
        "max" : 2147483647
      }, {
        "name" : "conf.dataFormatConfig.csvCustomDelimiter",
        "type" : "CHARACTER",
        "defaultValue" : "|",
        "description" : "",
        "dependsOn" : "conf.dataFormatConfig.csvFileFormat",
        "triggeredByValues" : [ "CUSTOM" ],
        "label" : "Delimiter Character",
        "group" : "DELIMITED",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 400,
        "dependsOnMap" : {
          "conf.dataFormatConfig.csvFileFormat" : [ "CUSTOM" ],
          "conf.dataFormat" : [ "DELIMITED" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvCustomDelimiter",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.csvCustomEscape",
        "type" : "CHARACTER",
        "defaultValue" : "\\",
        "description" : "",
        "dependsOn" : "conf.dataFormatConfig.csvFileFormat",
        "triggeredByValues" : [ "CUSTOM" ],
        "label" : "Escape Character",
        "group" : "DELIMITED",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 410,
        "dependsOnMap" : {
          "conf.dataFormatConfig.csvFileFormat" : [ "CUSTOM" ],
          "conf.dataFormat" : [ "DELIMITED" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvCustomEscape",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.csvCustomQuote",
        "type" : "CHARACTER",
        "defaultValue" : "\"",
        "description" : "",
        "dependsOn" : "conf.dataFormatConfig.csvFileFormat",
        "triggeredByValues" : [ "CUSTOM" ],
        "label" : "Quote Character",
        "group" : "DELIMITED",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 420,
        "dependsOnMap" : {
          "conf.dataFormatConfig.csvFileFormat" : [ "CUSTOM" ],
          "conf.dataFormat" : [ "DELIMITED" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvCustomQuote",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.csvRecordType",
        "type" : "MODEL",
        "defaultValue" : "LIST_MAP",
        "description" : "",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "DELIMITED" ],
        "label" : "Root Field Type",
        "group" : "DELIMITED",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "LIST", "LIST_MAP" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.CsvRecordTypeChooserValues",
          "labels" : [ "List", "List-Map" ]
        },
        "lines" : 0,
        "displayPosition" : 430,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "DELIMITED" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvRecordType",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.csvSkipStartLines",
        "type" : "NUMBER",
        "defaultValue" : 0,
        "description" : "Number of lines to skip before reading",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "DELIMITED" ],
        "label" : "Lines to Skip",
        "group" : "DELIMITED",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 435,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "DELIMITED" ]
        },
        "min" : 0,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvSkipStartLines",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.xmlRecordElement",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "XML element that acts as a record delimiter. No delimiter will treat the whole XML document as one record.",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "XML" ],
        "label" : "Delimiter Element",
        "group" : "XML",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 440,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "XML" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "xmlRecordElement",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.xmlMaxObjectLen",
        "type" : "NUMBER",
        "defaultValue" : 4096,
        "description" : "Larger records are not processed",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "XML" ],
        "label" : "Max Record Length (chars)",
        "group" : "XML",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 450,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "XML" ]
        },
        "min" : 1,
        "evaluation" : "IMPLICIT",
        "fieldName" : "xmlMaxObjectLen",
        "max" : 2147483647
      }, {
        "name" : "conf.dataFormatConfig.logMode",
        "type" : "MODEL",
        "defaultValue" : "COMMON_LOG_FORMAT",
        "description" : "",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "LOG" ],
        "label" : "Log Format",
        "group" : "LOG",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "COMMON_LOG_FORMAT", "COMBINED_LOG_FORMAT", "APACHE_ERROR_LOG_FORMAT", "APACHE_CUSTOM_LOG_FORMAT", "REGEX", "GROK", "LOG4J" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.LogModeChooserValues",
          "labels" : [ "Common Log Format", "Combined Log Format", "Apache Error Log Format", "Apache Access Log Custom Format", "Regular Expression", "Grok Pattern", "Log4j" ]
        },
        "lines" : 0,
        "displayPosition" : 460,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "logMode",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.logMaxObjectLen",
        "type" : "NUMBER",
        "defaultValue" : 1024,
        "description" : "Longer lines are truncated",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "LOG" ],
        "label" : "Max Line Length",
        "group" : "LOG",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 470,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ]
        },
        "min" : 1,
        "evaluation" : "IMPLICIT",
        "fieldName" : "logMaxObjectLen",
        "max" : 2147483647
      }, {
        "name" : "conf.dataFormatConfig.retainOriginalLine",
        "type" : "BOOLEAN",
        "defaultValue" : false,
        "description" : "Indicates if the original line of log should be retained in the record",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "LOG" ],
        "label" : "Retain Original Line",
        "group" : "LOG",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 480,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "retainOriginalLine",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.customLogFormat",
        "type" : "STRING",
        "defaultValue" : "%h %l %u %t \"%r\" %>s %b",
        "description" : "",
        "dependsOn" : "conf.dataFormatConfig.logMode",
        "triggeredByValues" : [ "APACHE_CUSTOM_LOG_FORMAT" ],
        "label" : "Custom Log Format",
        "group" : "LOG",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 490,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ],
          "conf.dataFormatConfig.logMode" : [ "APACHE_CUSTOM_LOG_FORMAT" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "customLogFormat",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.regex",
        "type" : "STRING",
        "defaultValue" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)",
        "description" : "The regular expression which is used to parse the log line.",
        "dependsOn" : "conf.dataFormatConfig.logMode",
        "triggeredByValues" : [ "REGEX" ],
        "label" : "Regular Expression",
        "group" : "LOG",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 500,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ],
          "conf.dataFormatConfig.logMode" : [ "REGEX" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "regex",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.fieldPathsToGroupName",
        "type" : "MODEL",
        "defaultValue" : [ ],
        "description" : "Map groups in the regular expression to field paths",
        "dependsOn" : "conf.dataFormatConfig.logMode",
        "triggeredByValues" : [ "REGEX" ],
        "label" : "Field Path To RegEx Group Mapping",
        "group" : "LOG",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ ],
        "elConstantDefinitionsIdx" : [ ],
        "mode" : "text/plain",
        "model" : {
          "values" : null,
          "configDefinitions" : [ {
            "name" : "fieldPath",
            "type" : "STRING",
            "defaultValue" : "/",
            "description" : "",
            "dependsOn" : "",
            "triggeredByValues" : null,
            "label" : "Field Path",
            "group" : "",
            "required" : true,
            "elDefs" : null,
            "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
            "elConstantDefinitionsIdx" : [ "19" ],
            "mode" : "text/plain",
            "model" : null,
            "lines" : 0,
            "displayPosition" : 10,
            "dependsOnMap" : null,
            "min" : -9223372036854775808,
            "evaluation" : "IMPLICIT",
            "fieldName" : "fieldPath",
            "max" : 9223372036854775807
          }, {
            "name" : "group",
            "type" : "NUMBER",
            "defaultValue" : 1,
            "description" : "",
            "dependsOn" : "",
            "triggeredByValues" : null,
            "label" : "Regular Expression Group",
            "group" : "",
            "required" : true,
            "elDefs" : null,
            "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
            "elConstantDefinitionsIdx" : [ "19" ],
            "mode" : "text/plain",
            "model" : null,
            "lines" : 0,
            "displayPosition" : 20,
            "dependsOnMap" : null,
            "min" : -9223372036854775808,
            "evaluation" : "IMPLICIT",
            "fieldName" : "group",
            "max" : 9223372036854775807
          } ],
          "modelType" : "LIST_BEAN",
          "valuesProviderClass" : null,
          "labels" : null
        },
        "lines" : 0,
        "displayPosition" : 510,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ],
          "conf.dataFormatConfig.logMode" : [ "REGEX" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "fieldPathsToGroupName",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.grokPatternDefinition",
        "type" : "TEXT",
        "defaultValue" : null,
        "description" : "Define your own grok patterns which will be used to parse the logs",
        "dependsOn" : "conf.dataFormatConfig.logMode",
        "triggeredByValues" : [ "GROK" ],
        "label" : "Grok Pattern Definition",
        "group" : "LOG",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 520,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ],
          "conf.dataFormatConfig.logMode" : [ "GROK" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "grokPatternDefinition",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.grokPattern",
        "type" : "STRING",
        "defaultValue" : "%{COMMONAPACHELOG}",
        "description" : "The grok pattern which is used to parse the log line",
        "dependsOn" : "conf.dataFormatConfig.logMode",
        "triggeredByValues" : [ "GROK" ],
        "label" : "Grok Pattern",
        "group" : "LOG",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 530,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ],
          "conf.dataFormatConfig.logMode" : [ "GROK" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "grokPattern",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.onParseError",
        "type" : "MODEL",
        "defaultValue" : "ERROR",
        "description" : "",
        "dependsOn" : "conf.dataFormatConfig.logMode",
        "triggeredByValues" : [ "LOG4J" ],
        "label" : "On Parse Error",
        "group" : "LOG",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "ERROR", "IGNORE", "INCLUDE_AS_STACK_TRACE" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.OnParseErrorChooserValues",
          "labels" : [ "ERROR", "IGNORE", "INCLUDE AS STACK TRACE" ]
        },
        "lines" : 0,
        "displayPosition" : 540,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ],
          "conf.dataFormatConfig.logMode" : [ "LOG4J" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "onParseError",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.maxStackTraceLines",
        "type" : "NUMBER",
        "defaultValue" : 50,
        "description" : "Any line that does not match the expected pattern will be treated as a Stack trace as long as it is part of the same message. The stack trace will be trimmed to the specified number of lines.",
        "dependsOn" : "conf.dataFormatConfig.onParseError",
        "triggeredByValues" : [ "INCLUDE_AS_STACK_TRACE" ],
        "label" : "Trim Stack Trace to Length",
        "group" : "LOG",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 550,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ],
          "conf.dataFormatConfig.logMode" : [ "LOG4J" ],
          "conf.dataFormatConfig.onParseError" : [ "INCLUDE_AS_STACK_TRACE" ]
        },
        "min" : 0,
        "evaluation" : "IMPLICIT",
        "fieldName" : "maxStackTraceLines",
        "max" : 2147483647
      }, {
        "name" : "conf.dataFormatConfig.enableLog4jCustomLogFormat",
        "type" : "BOOLEAN",
        "defaultValue" : false,
        "description" : "",
        "dependsOn" : "conf.dataFormatConfig.logMode",
        "triggeredByValues" : [ "LOG4J" ],
        "label" : "Use Custom Log Format",
        "group" : "LOG",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 560,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ],
          "conf.dataFormatConfig.logMode" : [ "LOG4J" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "enableLog4jCustomLogFormat",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.log4jCustomLogFormat",
        "type" : "STRING",
        "defaultValue" : "%r [%t] %-5p %c %x - %m%n",
        "description" : "Specify your own custom log4j format.",
        "dependsOn" : "conf.dataFormatConfig.enableLog4jCustomLogFormat",
        "triggeredByValues" : [ true ],
        "label" : "Custom Log4J Format",
        "group" : "LOG",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 570,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "LOG" ],
          "conf.dataFormatConfig.enableLog4jCustomLogFormat" : [ true ],
          "conf.dataFormatConfig.logMode" : [ "LOG4J" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "log4jCustomLogFormat",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.avroSchema",
        "type" : "TEXT",
        "defaultValue" : null,
        "description" : "Overrides the schema associated with the message. Optionally use the runtime:loadResource function to use a schema stored in a file",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "AVRO" ],
        "label" : "Avro Schema",
        "group" : "AVRO",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "application/json",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 590,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "AVRO" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "avroSchema",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.protoDescriptorFile",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "Protobuf Descriptor File (.desc) path relative to SDC resources directory",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "PROTOBUF" ],
        "label" : "Protobuf Descriptor File",
        "group" : "PROTOBUF",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 600,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "PROTOBUF" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "protoDescriptorFile",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.messageType",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "Fully Qualified Message Type name. Use format <packageName>.<messageTypeName>",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "PROTOBUF" ],
        "label" : "Message Type",
        "group" : "PROTOBUF",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 610,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "PROTOBUF" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "messageType",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.isDelimited",
        "type" : "BOOLEAN",
        "defaultValue" : true,
        "description" : "Should be checked when the input data is prepended with the message size. When unchecked only a single message can be present in the source file/Kafka message, etc.",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "PROTOBUF" ],
        "label" : "Delimited Messages",
        "group" : "PROTOBUF",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 620,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "PROTOBUF" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "isDelimited",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.dataFormatConfig.binaryMaxObjectLen",
        "type" : "NUMBER",
        "defaultValue" : 1024,
        "description" : "Larger objects are not processed",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "BINARY" ],
        "label" : "Max Data Size (bytes)",
        "group" : "BINARY",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 700,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "BINARY" ]
        },
        "min" : 1,
        "evaluation" : "IMPLICIT",
        "fieldName" : "binaryMaxObjectLen",
        "max" : 2147483647
      }, {
        "name" : "conf.dataFormat",
        "type" : "MODEL",
        "defaultValue" : null,
        "description" : "Format of data in the files",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Data Format",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "TEXT", "JSON", "LOG", "AVRO", "DELIMITED", "SDC_JSON", "XML", "PROTOBUF" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.stage.origin.spooldir.DataFormatChooserValues",
          "labels" : [ "Text", "JSON", "Log", "Avro", "Delimited", "SDC Record", "XML", "Protobuf" ]
        },
        "lines" : 0,
        "displayPosition" : 0,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "dataFormat",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.spoolDir",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "Use a local directory",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Files Directory",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 10,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "spoolDir",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.allowLateDirectory",
        "type" : "BOOLEAN",
        "defaultValue" : false,
        "description" : "Enables reading from a late-arriving directory. When enabled, the origin does not validate the configured path.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Allow Late Directory",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 12,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "allowLateDirectory",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.overrunLimit",
        "type" : "NUMBER",
        "defaultValue" : 128,
        "description" : "Low level reader buffer limit to avoid out of Memory errors",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Buffer Limit (KB)",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 15,
        "dependsOnMap" : null,
        "min" : 1,
        "evaluation" : "IMPLICIT",
        "fieldName" : "overrunLimit",
        "max" : 2147483647
      }, {
        "name" : "conf.batchSize",
        "type" : "NUMBER",
        "defaultValue" : 1000,
        "description" : "Max number of records per batch",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Batch Size (recs)",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 20,
        "dependsOnMap" : null,
        "min" : 0,
        "evaluation" : "IMPLICIT",
        "fieldName" : "batchSize",
        "max" : 2147483647
      }, {
        "name" : "conf.poolingTimeoutSecs",
        "type" : "NUMBER",
        "defaultValue" : 600,
        "description" : "Max time to wait for new files before sending an empty batch",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Batch Wait Time (secs)",
        "group" : "FILES",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 30,
        "dependsOnMap" : null,
        "min" : 1,
        "evaluation" : "IMPLICIT",
        "fieldName" : "poolingTimeoutSecs",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.useLastModified",
        "type" : "MODEL",
        "defaultValue" : "LEXICOGRAPHICAL",
        "description" : "Read files based on the last-modified timestamp or lexicographically ascending file names. When timestamp ordering is used, files with the same timestamp are ordered based on file names.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Read Order",
        "group" : "FILES",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "TIMESTAMP", "LEXICOGRAPHICAL" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.stage.origin.spooldir.FileOrderingChooseValues",
          "labels" : [ "Last Modified Timestamp", "Lexicographically Ascending File Names" ]
        },
        "lines" : 0,
        "displayPosition" : 35,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "useLastModified",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.filePattern",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "A glob or regular expression that defines the pattern of the file names in the directory. Files are processed in lexicographically increasing order.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "File Name Pattern",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 40,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "filePattern",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.maxSpoolFiles",
        "type" : "NUMBER",
        "defaultValue" : 1000,
        "description" : "Max number of files in the directory waiting to be processed. Additional files cause the pipeline to fail.",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "TEXT", "JSON", "XML", "DELIMITED", "LOG" ],
        "label" : "Max Files in Directory",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 60,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "TEXT", "JSON", "XML", "DELIMITED", "LOG" ]
        },
        "min" : 1,
        "evaluation" : "IMPLICIT",
        "fieldName" : "maxSpoolFiles",
        "max" : 2147483647
      }, {
        "name" : "conf.initialFileToProcess",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "When configured, the Data Collector does not process earlier (naturally ascending order) file names",
        "dependsOn" : "conf.dataFormat",
        "triggeredByValues" : [ "TEXT", "JSON", "XML", "DELIMITED", "LOG" ],
        "label" : "First File to Process",
        "group" : "FILES",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 50,
        "dependsOnMap" : {
          "conf.dataFormat" : [ "TEXT", "JSON", "XML", "DELIMITED", "LOG" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "initialFileToProcess",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.errorArchiveDir",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "Directory for files that could not be fully processed",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Error Directory",
        "group" : "POST_PROCESSING",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 100,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "errorArchiveDir",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.postProcessing",
        "type" : "MODEL",
        "defaultValue" : "NONE",
        "description" : "Action to take after processing a file",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "File Post Processing",
        "group" : "POST_PROCESSING",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "NONE", "ARCHIVE", "DELETE" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.PostProcessingOptionsChooserValues",
          "labels" : [ "None", "Archive", "Delete" ]
        },
        "lines" : 0,
        "displayPosition" : 110,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "postProcessing",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.archiveDir",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "Directory to archive files after they have been processed",
        "dependsOn" : "conf.postProcessing",
        "triggeredByValues" : [ "ARCHIVE" ],
        "label" : "Archive Directory",
        "group" : "POST_PROCESSING",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 200,
        "dependsOnMap" : {
          "conf.postProcessing" : [ "ARCHIVE" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "archiveDir",
        "max" : 9223372036854775807
      }, {
        "name" : "conf.retentionTimeMins",
        "type" : "NUMBER",
        "defaultValue" : 0,
        "description" : "How long archived files should be kept before deleting, a value of zero means forever",
        "dependsOn" : "conf.postProcessing",
        "triggeredByValues" : [ "ARCHIVE" ],
        "label" : "Archive Retention Time (mins)",
        "group" : "POST_PROCESSING",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 210,
        "dependsOnMap" : {
          "conf.postProcessing" : [ "ARCHIVE" ]
        },
        "min" : 0,
        "evaluation" : "IMPLICIT",
        "fieldName" : "retentionTimeMins",
        "max" : 9223372036854775807
      }, {
        "name" : "stageOnRecordError",
        "type" : "MODEL",
        "defaultValue" : "TO_ERROR",
        "description" : "Action to take with records sent to error",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "On Record Error",
        "group" : "",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "DISCARD", "TO_ERROR", "STOP_PIPELINE" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.datacollector.config.OnRecordErrorChooserValues",
          "labels" : [ "Discard", "Send to Error", "Stop Pipeline" ]
        },
        "lines" : 0,
        "displayPosition" : 30,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "stageOnRecordError",
        "max" : 9223372036854775807
      } ],
      "configGroupDefinition" : {
        "classNameToGroupsMap" : {
          "com.streamsets.pipeline.stage.origin.spooldir.Groups" : [ "FILES", "POST_PROCESSING", "TEXT", "JSON", "DELIMITED", "XML", "LOG", "AVRO", "BINARY", "PROTOBUF" ]
        },
        "groupNameToLabelMapList" : [ {
          "name" : "FILES",
          "label" : "Files"
        }, {
          "name" : "POST_PROCESSING",
          "label" : "Post Processing"
        }, {
          "name" : "TEXT",
          "label" : "Text"
        }, {
          "name" : "JSON",
          "label" : "JSON"
        }, {
          "name" : "DELIMITED",
          "label" : "Delimited"
        }, {
          "name" : "XML",
          "label" : "XML"
        }, {
          "name" : "LOG",
          "label" : "Log"
        }, {
          "name" : "AVRO",
          "label" : "Avro"
        }, {
          "name" : "BINARY",
          "label" : "Binary"
        }, {
          "name" : "PROTOBUF",
          "label" : "Protobuf"
        } ]
      },
      "rawSourceDefinition" : {
        "mimeType" : "*/*",
        "configDefinitions" : [ {
          "name" : "fileName",
          "type" : "STRING",
          "defaultValue" : null,
          "description" : "The full path of the file",
          "dependsOn" : "",
          "triggeredByValues" : null,
          "label" : "File Path",
          "group" : "",
          "required" : true,
          "elDefs" : null,
          "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
          "elConstantDefinitionsIdx" : [ "19" ],
          "mode" : "text/plain",
          "model" : null,
          "lines" : 0,
          "displayPosition" : 0,
          "dependsOnMap" : null,
          "min" : -9223372036854775808,
          "evaluation" : "IMPLICIT",
          "fieldName" : "fileName",
          "max" : 9223372036854775807
        } ],
        "rawSourcePreviewerClass" : "com.streamsets.pipeline.config.FileRawSourcePreviewer"
      },
      "errorStage" : false,
      "statsAggregatorStage" : false,
      "offsetCommitTrigger" : false,
      "variableOutputStreams" : false,
      "outputStreams" : 1,
      "outputStreamLabelProviderClass" : "com.streamsets.pipeline.api.StageDef$DefaultOutputStreams",
      "outputStreamLabels" : null,
      "executionModes" : [ "STANDALONE" ],
      "resetOffset" : true,
      "onlineHelpRefUrl" : "index.html#Origins/Directory.html#task_gfj_ssv_yq",
      "icon" : "directory.png",
      "onRecordError" : true,
      "preconditions" : false
    }, {
      "name" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
      "type" : "PROCESSOR",
      "className" : "com.streamsets.pipeline.stage.processor.expression.ExpressionDProcessor",
      "version" : "2",
      "description" : "Performs calculations on a field-by-field basis",
      "privateClassLoader" : false,
      "library" : "streamsets-datacollector-basic-lib",
      "label" : "Expression Evaluator",
      "libraryLabel" : "Basic",
      "configDefinitions" : [ {
        "name" : "expressionProcessorConfigs",
        "type" : "MODEL",
        "defaultValue" : [ ],
        "description" : "",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Field Expressions",
        "group" : "EXPRESSIONS",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ ],
        "elConstantDefinitionsIdx" : [ ],
        "mode" : "text/plain",
        "model" : {
          "values" : null,
          "configDefinitions" : [ {
            "name" : "fieldToSet",
            "type" : "MODEL",
            "defaultValue" : "/",
            "description" : "Use an existing field or enter a new field. Using an existing field overwrites the original value.",
            "dependsOn" : "",
            "triggeredByValues" : null,
            "label" : "Output Field",
            "group" : "EXPRESSIONS",
            "required" : true,
            "elDefs" : null,
            "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
            "elConstantDefinitionsIdx" : [ "19" ],
            "mode" : "text/plain",
            "model" : {
              "values" : null,
              "configDefinitions" : null,
              "modelType" : "FIELD_SELECTOR",
              "valuesProviderClass" : null,
              "labels" : null
            },
            "lines" : 0,
            "displayPosition" : 10,
            "dependsOnMap" : null,
            "min" : -9223372036854775808,
            "evaluation" : "IMPLICIT",
            "fieldName" : "fieldToSet",
            "max" : 9223372036854775807
          }, {
            "name" : "expression",
            "type" : "STRING",
            "defaultValue" : "${record:value('/')}",
            "description" : "Use the expression language to modify values in a field.",
            "dependsOn" : "",
            "triggeredByValues" : null,
            "label" : "Field Expression",
            "group" : "EXPRESSIONS",
            "required" : true,
            "elDefs" : null,
            "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "275", "276", "277", "278", "279", "280", "281", "282", "283", "284", "301", "302", "303", "304", "305", "306", "307" ],
            "elConstantDefinitionsIdx" : [ "19", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "298", "299", "300" ],
            "mode" : "text/plain",
            "model" : null,
            "lines" : 0,
            "displayPosition" : 20,
            "dependsOnMap" : null,
            "min" : -9223372036854775808,
            "evaluation" : "EXPLICIT",
            "fieldName" : "expression",
            "max" : 9223372036854775807
          } ],
          "modelType" : "LIST_BEAN",
          "valuesProviderClass" : null,
          "labels" : null
        },
        "lines" : 0,
        "displayPosition" : 10,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "expressionProcessorConfigs",
        "max" : 9223372036854775807
      }, {
        "name" : "headerAttributeConfigs",
        "type" : "MODEL",
        "defaultValue" : [ ],
        "description" : "",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Header Attribute Expressions",
        "group" : "EXPRESSIONS",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ ],
        "elConstantDefinitionsIdx" : [ ],
        "mode" : "text/plain",
        "model" : {
          "values" : null,
          "configDefinitions" : [ {
            "name" : "attributeToSet",
            "type" : "STRING",
            "defaultValue" : "/",
            "description" : "Use an existing header attribute or enter a new attribute. Using an existing attribute overwrites the original value.",
            "dependsOn" : "",
            "triggeredByValues" : null,
            "label" : "Header Attribute",
            "group" : "EXPRESSIONS",
            "required" : true,
            "elDefs" : null,
            "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
            "elConstantDefinitionsIdx" : [ "19" ],
            "mode" : "text/plain",
            "model" : null,
            "lines" : 0,
            "displayPosition" : 30,
            "dependsOnMap" : null,
            "min" : -9223372036854775808,
            "evaluation" : "IMPLICIT",
            "fieldName" : "attributeToSet",
            "max" : 9223372036854775807
          }, {
            "name" : "headerAttributeExpression",
            "type" : "STRING",
            "defaultValue" : "${record:value('/')}",
            "description" : "Use the expression language to modify or set new attributes in the header.",
            "dependsOn" : "",
            "triggeredByValues" : null,
            "label" : "Header Attribute Expression",
            "group" : "EXPRESSIONS",
            "required" : true,
            "elDefs" : null,
            "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "275", "276", "277", "278", "279", "280", "281", "282", "283", "284", "301", "302", "303", "304", "305", "306" ],
            "elConstantDefinitionsIdx" : [ "19", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "298", "299", "300" ],
            "mode" : "text/plain",
            "model" : null,
            "lines" : 0,
            "displayPosition" : 40,
            "dependsOnMap" : null,
            "min" : -9223372036854775808,
            "evaluation" : "EXPLICIT",
            "fieldName" : "headerAttributeExpression",
            "max" : 9223372036854775807
          } ],
          "modelType" : "LIST_BEAN",
          "valuesProviderClass" : null,
          "labels" : null
        },
        "lines" : 0,
        "displayPosition" : 10,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "headerAttributeConfigs",
        "max" : 9223372036854775807
      }, {
        "name" : "stageOnRecordError",
        "type" : "MODEL",
        "defaultValue" : "TO_ERROR",
        "description" : "Action to take with records sent to error",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "On Record Error",
        "group" : "",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "DISCARD", "TO_ERROR", "STOP_PIPELINE" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.datacollector.config.OnRecordErrorChooserValues",
          "labels" : [ "Discard", "Send to Error", "Stop Pipeline" ]
        },
        "lines" : 0,
        "displayPosition" : 30,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "stageOnRecordError",
        "max" : 9223372036854775807
      }, {
        "name" : "stageRequiredFields",
        "type" : "MODEL",
        "defaultValue" : [ ],
        "description" : "Records without any of these fields are sent to error",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Required Fields",
        "group" : "",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : null,
          "configDefinitions" : null,
          "modelType" : "FIELD_SELECTOR_MULTI_VALUE",
          "valuesProviderClass" : null,
          "labels" : null
        },
        "lines" : 0,
        "displayPosition" : 10,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "stageRequiredFields",
        "max" : 9223372036854775807
      }, {
        "name" : "stageRecordPreconditions",
        "type" : "LIST",
        "defaultValue" : null,
        "description" : "Records that don't satisfy all the preconditions are sent to error",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Preconditions",
        "group" : "",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40" ],
        "elConstantDefinitionsIdx" : [ "19", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 20,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "EXPLICIT",
        "fieldName" : "stageRecordPreconditions",
        "max" : 9223372036854775807
      } ],
      "configGroupDefinition" : {
        "classNameToGroupsMap" : {
          "com.streamsets.pipeline.stage.processor.expression.Groups" : [ "EXPRESSIONS" ]
        },
        "groupNameToLabelMapList" : [ {
          "name" : "EXPRESSIONS",
          "label" : "Expressions"
        } ]
      },
      "rawSourceDefinition" : null,
      "errorStage" : false,
      "statsAggregatorStage" : false,
      "offsetCommitTrigger" : false,
      "variableOutputStreams" : false,
      "outputStreams" : 1,
      "outputStreamLabelProviderClass" : "com.streamsets.pipeline.api.StageDef$DefaultOutputStreams",
      "outputStreamLabels" : null,
      "executionModes" : [ "STANDALONE", "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING", "CLUSTER_MESOS_STREAMING" ],
      "resetOffset" : false,
      "onlineHelpRefUrl" : "index.html#Processors/Expression.html#task_x2h_tv4_yq",
      "icon" : "expression.png",
      "onRecordError" : true,
      "preconditions" : true
    }, {
      "name" : "com_streamsets_pipeline_stage_processor_javascript_JavaScriptDProcessor",
      "type" : "PROCESSOR",
      "className" : "com.streamsets.pipeline.stage.processor.javascript.JavaScriptDProcessor",
      "version" : "2",
      "description" : "Processes records using JavaScript",
      "privateClassLoader" : false,
      "library" : "streamsets-datacollector-basic-lib",
      "label" : "JavaScript Evaluator",
      "libraryLabel" : "Basic",
      "configDefinitions" : [ {
        "name" : "processingMode",
        "type" : "MODEL",
        "defaultValue" : "BATCH",
        "description" : "If 'Record by Record' the processor takes care of record error handling, if 'Batch by Batch' the JavaScript must take care of record error handling",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Record Processing Mode",
        "group" : "JAVASCRIPT",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "RECORD", "BATCH" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.stage.processor.scripting.ProcessingModeChooserValues",
          "labels" : [ "Record by Record", "Batch by Batch" ]
        },
        "lines" : 0,
        "displayPosition" : 10,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "processingMode",
        "max" : 9223372036854775807
      }, {
        "name" : "script",
        "type" : "TEXT",
        "defaultValue" : "/**\n * Sample JavaScript code\n *\n * Available Objects:\n * \n *  records: an array of records to process, depending on the JavaScript processor\n *           processing mode it may have 1 record or all the records in the batch.\n *\n *  state: a dict that is preserved between invocations of this script. \n *        Useful for caching bits of data e.g. counters.\n *\n *  log.<loglevel>(msg, obj...): use instead of print to send log messages to the log4j log instead of stdout.\n *                               loglevel is any log4j level: e.g. info, error, warn, trace.\n *\n *  output.write(record): writes a record to processor output\n *\n *  error.write(record, message): sends a record to error\n *\n */\n\nfor(var i = 0; i < records.length; i++) {\n  try {\n    // Change record root field value to a STRING value\n    //records[i].value = 'Hello ' + i;\n\n\n    // Change record root field value to a MAP value and create an entry\n    //records[i].value = { V : 'Hello' };\n\n    // Access a MAP entry\n    //records[i].value.X = records[i].value['V'] + ' World';\n\n    // Modify a MAP entry\n    //records[i].value.V = 5;\n\n    // Create an ARRAY entry\n    //records[i].value.A = ['Element 1', 'Element 2'];\n\n    // Access a Array entry\n    //records[i].value.B = records[i].value['A'][0];\n\n    // Modify an existing ARRAY entry\n    //records[i].value.A[0] = 100;\n\n    // Write record to procesor output\n    output.write(records[i]);\n  } catch (e) {\n    // Send record to error\n    error.write(records[i], e);\n  }\n}\n",
        "description" : "",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Script",
        "group" : "JAVASCRIPT",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/javascript",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 20,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "script",
        "max" : 9223372036854775807
      }, {
        "name" : "stageOnRecordError",
        "type" : "MODEL",
        "defaultValue" : "TO_ERROR",
        "description" : "Action to take with records sent to error",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "On Record Error",
        "group" : "",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "DISCARD", "TO_ERROR", "STOP_PIPELINE" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.datacollector.config.OnRecordErrorChooserValues",
          "labels" : [ "Discard", "Send to Error", "Stop Pipeline" ]
        },
        "lines" : 0,
        "displayPosition" : 30,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "stageOnRecordError",
        "max" : 9223372036854775807
      }, {
        "name" : "stageRequiredFields",
        "type" : "MODEL",
        "defaultValue" : [ ],
        "description" : "Records without any of these fields are sent to error",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Required Fields",
        "group" : "",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : null,
          "configDefinitions" : null,
          "modelType" : "FIELD_SELECTOR_MULTI_VALUE",
          "valuesProviderClass" : null,
          "labels" : null
        },
        "lines" : 0,
        "displayPosition" : 10,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "stageRequiredFields",
        "max" : 9223372036854775807
      }, {
        "name" : "stageRecordPreconditions",
        "type" : "LIST",
        "defaultValue" : null,
        "description" : "Records that don't satisfy all the preconditions are sent to error",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Preconditions",
        "group" : "",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40" ],
        "elConstantDefinitionsIdx" : [ "19", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 20,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "EXPLICIT",
        "fieldName" : "stageRecordPreconditions",
        "max" : 9223372036854775807
      } ],
      "configGroupDefinition" : {
        "classNameToGroupsMap" : {
          "com.streamsets.pipeline.stage.processor.javascript.Groups" : [ "JAVASCRIPT" ]
        },
        "groupNameToLabelMapList" : [ {
          "name" : "JAVASCRIPT",
          "label" : "JavaScript"
        } ]
      },
      "rawSourceDefinition" : null,
      "errorStage" : false,
      "statsAggregatorStage" : false,
      "offsetCommitTrigger" : false,
      "variableOutputStreams" : false,
      "outputStreams" : 1,
      "outputStreamLabelProviderClass" : "com.streamsets.pipeline.api.StageDef$DefaultOutputStreams",
      "outputStreamLabels" : null,
      "executionModes" : [ "STANDALONE", "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING", "CLUSTER_MESOS_STREAMING" ],
      "resetOffset" : false,
      "onlineHelpRefUrl" : "index.html#Processors/JavaScript.html#task_mzc_1by_nr",
      "icon" : "javascript.png",
      "onRecordError" : true,
      "preconditions" : true
    }, {
      "name" : "com_streamsets_pipeline_stage_destination_localfilesystem_LocalFileSystemDTarget",
      "type" : "TARGET",
      "className" : "com.streamsets.pipeline.stage.destination.localfilesystem.LocalFileSystemDTarget",
      "version" : "2",
      "description" : "Writes to the local file system",
      "privateClassLoader" : false,
      "library" : "streamsets-datacollector-basic-lib",
      "label" : "Local FS",
      "libraryLabel" : "Basic",
      "configDefinitions" : [ {
        "name" : "configs.uniquePrefix",
        "type" : "STRING",
        "defaultValue" : "sdc-${sdc:id()}",
        "description" : "File name prefix",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Files Prefix",
        "group" : "OUTPUT_FILES",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "322" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 105,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "uniquePrefix",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dirPathTemplateInHeader",
        "type" : "BOOLEAN",
        "defaultValue" : false,
        "description" : "The directory is defined by the 'targetDirectory' record header attribute instead of the Directory Template configuration property.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Directory in Header",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 105,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "dirPathTemplateInHeader",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dirPathTemplate",
        "type" : "STRING",
        "defaultValue" : "/tmp/out/${YYYY()}-${MM()}-${DD()}-${hh()}",
        "description" : "Template for the creation of output directories. Valid variables are ${YYYY()}, ${MM()}, ${DD()}, ${hh()}, ${mm()}, ${ss()} and {record:value(“/field”)} for values in a field. Directories are created based on the smallest time unit variable used.",
        "dependsOn" : "configs.dirPathTemplateInHeader",
        "triggeredByValues" : [ false ],
        "label" : "Directory Template",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "275", "276", "277", "278", "279", "280", "281", "282", "283", "284", "323", "324", "325", "326", "327", "328", "329", "330" ],
        "elConstantDefinitionsIdx" : [ "19", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "298", "299", "300", "331", "332", "333" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 110,
        "dependsOnMap" : {
          "configs.dirPathTemplateInHeader" : [ false ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "EXPLICIT",
        "fieldName" : "dirPathTemplate",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.timeZoneID",
        "type" : "MODEL",
        "defaultValue" : "UTC",
        "description" : "Time zone to use to resolve directory paths",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Data Time Zone",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/East-Saskatchewan", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST5EDT", "Egypt", "Eire", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT0", "Greenwich", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROK", "Singapore", "SystemV/AST4", "SystemV/AST4ADT", "SystemV/CST6", "SystemV/CST6CDT", "SystemV/EST5", "SystemV/EST5EDT", "SystemV/HST10", "SystemV/MST7", "SystemV/MST7MDT", "SystemV/PST8", "SystemV/PST8PDT", "SystemV/YST9", "SystemV/YST9YDT", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Pacific-New", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu", "EST", "HST", "MST", "ACT", "AET", "AGT", "ART", "AST", "BET", "BST", "CAT", "CNT", "CST", "CTT", "EAT", "ECT", "IET", "IST", "JST", "MIT", "NET", "NST", "PLT", "PNT", "PRT", "PST", "SST", "VST" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.TimeZoneChooserValues",
          "labels" : [ "GMT (Africa/Abidjan)", "GMT (Africa/Accra)", "EAT (Africa/Addis_Ababa)", "CET (Africa/Algiers)", "EAT (Africa/Asmara)", "EAT (Africa/Asmera)", "GMT (Africa/Bamako)", "WAT (Africa/Bangui)", "GMT (Africa/Banjul)", "GMT (Africa/Bissau)", "CAT (Africa/Blantyre)", "WAT (Africa/Brazzaville)", "CAT (Africa/Bujumbura)", "EET (Africa/Cairo)", "WET (Africa/Casablanca)", "CET (Africa/Ceuta)", "GMT (Africa/Conakry)", "GMT (Africa/Dakar)", "EAT (Africa/Dar_es_Salaam)", "EAT (Africa/Djibouti)", "WAT (Africa/Douala)", "WET (Africa/El_Aaiun)", "GMT (Africa/Freetown)", "CAT (Africa/Gaborone)", "CAT (Africa/Harare)", "SAST (Africa/Johannesburg)", "EAT (Africa/Juba)", "EAT (Africa/Kampala)", "EAT (Africa/Khartoum)", "CAT (Africa/Kigali)", "WAT (Africa/Kinshasa)", "WAT (Africa/Lagos)", "WAT (Africa/Libreville)", "GMT (Africa/Lome)", "WAT (Africa/Luanda)", "CAT (Africa/Lubumbashi)", "CAT (Africa/Lusaka)", "WAT (Africa/Malabo)", "CAT (Africa/Maputo)", "SAST (Africa/Maseru)", "SAST (Africa/Mbabane)", "EAT (Africa/Mogadishu)", "GMT (Africa/Monrovia)", "EAT (Africa/Nairobi)", "WAT (Africa/Ndjamena)", "WAT (Africa/Niamey)", "GMT (Africa/Nouakchott)", "GMT (Africa/Ouagadougou)", "WAT (Africa/Porto-Novo)", "GMT (Africa/Sao_Tome)", "GMT (Africa/Timbuktu)", "EET (Africa/Tripoli)", "CET (Africa/Tunis)", "WAT (Africa/Windhoek)", "HST (America/Adak)", "AKST (America/Anchorage)", "AST (America/Anguilla)", "AST (America/Antigua)", "BRT (America/Araguaina)", "ART (America/Argentina/Buenos_Aires)", "ART (America/Argentina/Catamarca)", "ART (America/Argentina/ComodRivadavia)", "ART (America/Argentina/Cordoba)", "ART (America/Argentina/Jujuy)", "ART (America/Argentina/La_Rioja)", "ART (America/Argentina/Mendoza)", "ART (America/Argentina/Rio_Gallegos)", "ART (America/Argentina/Salta)", "ART (America/Argentina/San_Juan)", "ART (America/Argentina/San_Luis)", "ART (America/Argentina/Tucuman)", "ART (America/Argentina/Ushuaia)", "AST (America/Aruba)", "PYT (America/Asuncion)", "EST (America/Atikokan)", "HST (America/Atka)", "BRT (America/Bahia)", "CST (America/Bahia_Banderas)", "AST (America/Barbados)", "BRT (America/Belem)", "CST (America/Belize)", "AST (America/Blanc-Sablon)", "AMT (America/Boa_Vista)", "COT (America/Bogota)", "MST (America/Boise)", "ART (America/Buenos_Aires)", "MST (America/Cambridge_Bay)", "AMT (America/Campo_Grande)", "EST (America/Cancun)", "VET (America/Caracas)", "ART (America/Catamarca)", "GFT (America/Cayenne)", "EST (America/Cayman)", "CST (America/Chicago)", "MST (America/Chihuahua)", "EST (America/Coral_Harbour)", "ART (America/Cordoba)", "CST (America/Costa_Rica)", "MST (America/Creston)", "AMT (America/Cuiaba)", "AST (America/Curacao)", "GMT (America/Danmarkshavn)", "PST (America/Dawson)", "MST (America/Dawson_Creek)", "MST (America/Denver)", "EST (America/Detroit)", "AST (America/Dominica)", "MST (America/Edmonton)", "ACT (America/Eirunepe)", "CST (America/El_Salvador)", "PST (America/Ensenada)", "MST (America/Fort_Nelson)", "EST (America/Fort_Wayne)", "BRT (America/Fortaleza)", "AST (America/Glace_Bay)", "WGT (America/Godthab)", "AST (America/Goose_Bay)", "AST (America/Grand_Turk)", "AST (America/Grenada)", "AST (America/Guadeloupe)", "CST (America/Guatemala)", "ECT (America/Guayaquil)", "GYT (America/Guyana)", "AST (America/Halifax)", "CST (America/Havana)", "MST (America/Hermosillo)", "EST (America/Indiana/Indianapolis)", "CST (America/Indiana/Knox)", "EST (America/Indiana/Marengo)", "EST (America/Indiana/Petersburg)", "CST (America/Indiana/Tell_City)", "EST (America/Indiana/Vevay)", "EST (America/Indiana/Vincennes)", "EST (America/Indiana/Winamac)", "EST (America/Indianapolis)", "MST (America/Inuvik)", "EST (America/Iqaluit)", "EST (America/Jamaica)", "ART (America/Jujuy)", "AKST (America/Juneau)", "EST (America/Kentucky/Louisville)", "EST (America/Kentucky/Monticello)", "CST (America/Knox_IN)", "AST (America/Kralendijk)", "BOT (America/La_Paz)", "PET (America/Lima)", "PST (America/Los_Angeles)", "EST (America/Louisville)", "AST (America/Lower_Princes)", "BRT (America/Maceio)", "CST (America/Managua)", "AMT (America/Manaus)", "AST (America/Marigot)", "AST (America/Martinique)", "CST (America/Matamoros)", "MST (America/Mazatlan)", "ART (America/Mendoza)", "CST (America/Menominee)", "CST (America/Merida)", "AKST (America/Metlakatla)", "CST (America/Mexico_City)", "PMST (America/Miquelon)", "AST (America/Moncton)", "CST (America/Monterrey)", "UYT (America/Montevideo)", "EST (America/Montreal)", "AST (America/Montserrat)", "EST (America/Nassau)", "EST (America/New_York)", "EST (America/Nipigon)", "AKST (America/Nome)", "FNT (America/Noronha)", "CST (America/North_Dakota/Beulah)", "CST (America/North_Dakota/Center)", "CST (America/North_Dakota/New_Salem)", "MST (America/Ojinaga)", "EST (America/Panama)", "EST (America/Pangnirtung)", "SRT (America/Paramaribo)", "MST (America/Phoenix)", "EST (America/Port-au-Prince)", "AST (America/Port_of_Spain)", "ACT (America/Porto_Acre)", "AMT (America/Porto_Velho)", "AST (America/Puerto_Rico)", "CST (America/Rainy_River)", "CST (America/Rankin_Inlet)", "BRT (America/Recife)", "CST (America/Regina)", "CST (America/Resolute)", "ACT (America/Rio_Branco)", "ART (America/Rosario)", "PST (America/Santa_Isabel)", "BRT (America/Santarem)", "CLT (America/Santiago)", "AST (America/Santo_Domingo)", "BRT (America/Sao_Paulo)", "EGT (America/Scoresbysund)", "MST (America/Shiprock)", "AKST (America/Sitka)", "AST (America/St_Barthelemy)", "NST (America/St_Johns)", "AST (America/St_Kitts)", "AST (America/St_Lucia)", "AST (America/St_Thomas)", "AST (America/St_Vincent)", "CST (America/Swift_Current)", "CST (America/Tegucigalpa)", "AST (America/Thule)", "EST (America/Thunder_Bay)", "PST (America/Tijuana)", "EST (America/Toronto)", "AST (America/Tortola)", "PST (America/Vancouver)", "AST (America/Virgin)", "PST (America/Whitehorse)", "CST (America/Winnipeg)", "AKST (America/Yakutat)", "MST (America/Yellowknife)", "AWST (Antarctica/Casey)", "DAVT (Antarctica/Davis)", "DDUT (Antarctica/DumontDUrville)", "MIST (Antarctica/Macquarie)", "MAWT (Antarctica/Mawson)", "NZST (Antarctica/McMurdo)", "CLT (Antarctica/Palmer)", "ROTT (Antarctica/Rothera)", "NZST (Antarctica/South_Pole)", "SYOT (Antarctica/Syowa)", "UTC (Antarctica/Troll)", "VOST (Antarctica/Vostok)", "CET (Arctic/Longyearbyen)", "AST (Asia/Aden)", "ALMT (Asia/Almaty)", "EET (Asia/Amman)", "ANAT (Asia/Anadyr)", "AQTT (Asia/Aqtau)", "AQTT (Asia/Aqtobe)", "TMT (Asia/Ashgabat)", "TMT (Asia/Ashkhabad)", "AST (Asia/Baghdad)", "AST (Asia/Bahrain)", "AZT (Asia/Baku)", "ICT (Asia/Bangkok)", "EET (Asia/Beirut)", "KGT (Asia/Bishkek)", "BNT (Asia/Brunei)", "IST (Asia/Calcutta)", "YAKT (Asia/Chita)", "CHOT (Asia/Choibalsan)", "CST (Asia/Chongqing)", "CST (Asia/Chungking)", "IST (Asia/Colombo)", "BDT (Asia/Dacca)", "EET (Asia/Damascus)", "BDT (Asia/Dhaka)", "TLT (Asia/Dili)", "GST (Asia/Dubai)", "TJT (Asia/Dushanbe)", "EET (Asia/Gaza)", "CST (Asia/Harbin)", "EET (Asia/Hebron)", "ICT (Asia/Ho_Chi_Minh)", "HKT (Asia/Hong_Kong)", "HOVT (Asia/Hovd)", "IRKT (Asia/Irkutsk)", "EET (Asia/Istanbul)", "WIB (Asia/Jakarta)", "WIT (Asia/Jayapura)", "IST (Asia/Jerusalem)", "AFT (Asia/Kabul)", "PETT (Asia/Kamchatka)", "PKT (Asia/Karachi)", "XJT (Asia/Kashgar)", "NPT (Asia/Kathmandu)", "NPT (Asia/Katmandu)", "YAKT (Asia/Khandyga)", "IST (Asia/Kolkata)", "KRAT (Asia/Krasnoyarsk)", "MYT (Asia/Kuala_Lumpur)", "MYT (Asia/Kuching)", "AST (Asia/Kuwait)", "CST (Asia/Macao)", "CST (Asia/Macau)", "MAGT (Asia/Magadan)", "WITA (Asia/Makassar)", "PHT (Asia/Manila)", "GST (Asia/Muscat)", "EET (Asia/Nicosia)", "KRAT (Asia/Novokuznetsk)", "NOVT (Asia/Novosibirsk)", "OMST (Asia/Omsk)", "ORAT (Asia/Oral)", "ICT (Asia/Phnom_Penh)", "WIB (Asia/Pontianak)", "KST (Asia/Pyongyang)", "AST (Asia/Qatar)", "QYZT (Asia/Qyzylorda)", "MMT (Asia/Rangoon)", "AST (Asia/Riyadh)", "ICT (Asia/Saigon)", "SAKT (Asia/Sakhalin)", "UZT (Asia/Samarkand)", "KST (Asia/Seoul)", "CST (Asia/Shanghai)", "SGT (Asia/Singapore)", "SRET (Asia/Srednekolymsk)", "CST (Asia/Taipei)", "UZT (Asia/Tashkent)", "GET (Asia/Tbilisi)", "IRST (Asia/Tehran)", "IST (Asia/Tel_Aviv)", "BTT (Asia/Thimbu)", "BTT (Asia/Thimphu)", "JST (Asia/Tokyo)", "WITA (Asia/Ujung_Pandang)", "ULAT (Asia/Ulaanbaatar)", "ULAT (Asia/Ulan_Bator)", "XJT (Asia/Urumqi)", "VLAT (Asia/Ust-Nera)", "ICT (Asia/Vientiane)", "VLAT (Asia/Vladivostok)", "YAKT (Asia/Yakutsk)", "YEKT (Asia/Yekaterinburg)", "AMT (Asia/Yerevan)", "AZOT (Atlantic/Azores)", "AST (Atlantic/Bermuda)", "WET (Atlantic/Canary)", "CVT (Atlantic/Cape_Verde)", "WET (Atlantic/Faeroe)", "WET (Atlantic/Faroe)", "CET (Atlantic/Jan_Mayen)", "WET (Atlantic/Madeira)", "GMT (Atlantic/Reykjavik)", "GST (Atlantic/South_Georgia)", "GMT (Atlantic/St_Helena)", "FKT (Atlantic/Stanley)", "AEST (Australia/ACT)", "ACST (Australia/Adelaide)", "AEST (Australia/Brisbane)", "ACST (Australia/Broken_Hill)", "AEST (Australia/Canberra)", "AEST (Australia/Currie)", "ACST (Australia/Darwin)", "ACWST (Australia/Eucla)", "AEST (Australia/Hobart)", "LHST (Australia/LHI)", "AEST (Australia/Lindeman)", "LHST (Australia/Lord_Howe)", "AEST (Australia/Melbourne)", "AEST (Australia/NSW)", "ACST (Australia/North)", "AWST (Australia/Perth)", "AEST (Australia/Queensland)", "ACST (Australia/South)", "AEST (Australia/Sydney)", "AEST (Australia/Tasmania)", "AEST (Australia/Victoria)", "AWST (Australia/West)", "ACST (Australia/Yancowinna)", "ACT (Brazil/Acre)", "FNT (Brazil/DeNoronha)", "BRT (Brazil/East)", "AMT (Brazil/West)", "CET (CET)", "CST (CST6CDT)", "AST (Canada/Atlantic)", "CST (Canada/Central)", "CST (Canada/East-Saskatchewan)", "EST (Canada/Eastern)", "MST (Canada/Mountain)", "NST (Canada/Newfoundland)", "PST (Canada/Pacific)", "CST (Canada/Saskatchewan)", "PST (Canada/Yukon)", "CLT (Chile/Continental)", "EAST (Chile/EasterIsland)", "CST (Cuba)", "EET (EET)", "EST (EST5EDT)", "EET (Egypt)", "GMT (Eire)", "GMT (Etc/Greenwich)", "UTC (Etc/UCT)", "UTC (Etc/UTC)", "UTC (Etc/Universal)", "UTC (Etc/Zulu)", "CET (Europe/Amsterdam)", "CET (Europe/Andorra)", "EET (Europe/Athens)", "GMT (Europe/Belfast)", "CET (Europe/Belgrade)", "CET (Europe/Berlin)", "CET (Europe/Bratislava)", "CET (Europe/Brussels)", "EET (Europe/Bucharest)", "CET (Europe/Budapest)", "CET (Europe/Busingen)", "EET (Europe/Chisinau)", "CET (Europe/Copenhagen)", "GMT (Europe/Dublin)", "CET (Europe/Gibraltar)", "GMT (Europe/Guernsey)", "EET (Europe/Helsinki)", "GMT (Europe/Isle_of_Man)", "EET (Europe/Istanbul)", "GMT (Europe/Jersey)", "EET (Europe/Kaliningrad)", "EET (Europe/Kiev)", "WET (Europe/Lisbon)", "CET (Europe/Ljubljana)", "GMT (Europe/London)", "CET (Europe/Luxembourg)", "CET (Europe/Madrid)", "CET (Europe/Malta)", "EET (Europe/Mariehamn)", "MSK (Europe/Minsk)", "CET (Europe/Monaco)", "MSK (Europe/Moscow)", "EET (Europe/Nicosia)", "CET (Europe/Oslo)", "CET (Europe/Paris)", "CET (Europe/Podgorica)", "CET (Europe/Prague)", "EET (Europe/Riga)", "CET (Europe/Rome)", "SAMT (Europe/Samara)", "CET (Europe/San_Marino)", "CET (Europe/Sarajevo)", "MSK (Europe/Simferopol)", "CET (Europe/Skopje)", "EET (Europe/Sofia)", "CET (Europe/Stockholm)", "EET (Europe/Tallinn)", "CET (Europe/Tirane)", "EET (Europe/Tiraspol)", "EET (Europe/Uzhgorod)", "CET (Europe/Vaduz)", "CET (Europe/Vatican)", "CET (Europe/Vienna)", "EET (Europe/Vilnius)", "MSK (Europe/Volgograd)", "CET (Europe/Warsaw)", "CET (Europe/Zagreb)", "EET (Europe/Zaporozhye)", "CET (Europe/Zurich)", "GMT (GB)", "GMT (GB-Eire)", "GMT (GMT)", "GMT (GMT0)", "GMT (Greenwich)", "HKT (Hongkong)", "GMT (Iceland)", "EAT (Indian/Antananarivo)", "IOT (Indian/Chagos)", "CXT (Indian/Christmas)", "CCT (Indian/Cocos)", "EAT (Indian/Comoro)", "TFT (Indian/Kerguelen)", "SCT (Indian/Mahe)", "MVT (Indian/Maldives)", "MUT (Indian/Mauritius)", "EAT (Indian/Mayotte)", "RET (Indian/Reunion)", "IRST (Iran)", "IST (Israel)", "EST (Jamaica)", "JST (Japan)", "MHT (Kwajalein)", "EET (Libya)", "MET (MET)", "MST (MST7MDT)", "PST (Mexico/BajaNorte)", "MST (Mexico/BajaSur)", "CST (Mexico/General)", "NZST (NZ)", "CHAST (NZ-CHAT)", "MST (Navajo)", "CST (PRC)", "PST (PST8PDT)", "WSST (Pacific/Apia)", "NZST (Pacific/Auckland)", "BST (Pacific/Bougainville)", "CHAST (Pacific/Chatham)", "CHUT (Pacific/Chuuk)", "EAST (Pacific/Easter)", "VUT (Pacific/Efate)", "PHOT (Pacific/Enderbury)", "TKT (Pacific/Fakaofo)", "FJT (Pacific/Fiji)", "TVT (Pacific/Funafuti)", "GALT (Pacific/Galapagos)", "GAMT (Pacific/Gambier)", "SBT (Pacific/Guadalcanal)", "ChST (Pacific/Guam)", "HST (Pacific/Honolulu)", "HST (Pacific/Johnston)", "LINT (Pacific/Kiritimati)", "KOST (Pacific/Kosrae)", "MHT (Pacific/Kwajalein)", "MHT (Pacific/Majuro)", "MART (Pacific/Marquesas)", "SST (Pacific/Midway)", "NRT (Pacific/Nauru)", "NUT (Pacific/Niue)", "NFT (Pacific/Norfolk)", "NCT (Pacific/Noumea)", "SST (Pacific/Pago_Pago)", "PWT (Pacific/Palau)", "PST (Pacific/Pitcairn)", "PONT (Pacific/Pohnpei)", "PONT (Pacific/Ponape)", "PGT (Pacific/Port_Moresby)", "CKT (Pacific/Rarotonga)", "ChST (Pacific/Saipan)", "SST (Pacific/Samoa)", "TAHT (Pacific/Tahiti)", "GILT (Pacific/Tarawa)", "TOT (Pacific/Tongatapu)", "CHUT (Pacific/Truk)", "WAKT (Pacific/Wake)", "WFT (Pacific/Wallis)", "CHUT (Pacific/Yap)", "CET (Poland)", "WET (Portugal)", "KST (ROK)", "SGT (Singapore)", "AST (SystemV/AST4)", "AST (SystemV/AST4ADT)", "CST (SystemV/CST6)", "CST (SystemV/CST6CDT)", "EST (SystemV/EST5)", "EST (SystemV/EST5EDT)", "HST (SystemV/HST10)", "MST (SystemV/MST7)", "MST (SystemV/MST7MDT)", "PST (SystemV/PST8)", "PST (SystemV/PST8PDT)", "AKST (SystemV/YST9)", "AKST (SystemV/YST9YDT)", "EET (Turkey)", "UTC (UCT)", "AKST (US/Alaska)", "HST (US/Aleutian)", "MST (US/Arizona)", "CST (US/Central)", "EST (US/East-Indiana)", "EST (US/Eastern)", "HST (US/Hawaii)", "CST (US/Indiana-Starke)", "EST (US/Michigan)", "MST (US/Mountain)", "PST (US/Pacific)", "PST (US/Pacific-New)", "SST (US/Samoa)", "UTC (UTC)", "UTC (Universal)", "MSK (W-SU)", "WET (WET)", "UTC (Zulu)", "EST (EST)", "HST (HST)", "MST (MST)", "ACST (ACT)", "AEST (AET)", "ART (AGT)", "EET (ART)", "AKST (AST)", "BRT (BET)", "BDT (BST)", "CAT (CAT)", "NST (CNT)", "CST (CST)", "CST (CTT)", "EAT (EAT)", "CET (ECT)", "EST (IET)", "IST (IST)", "JST (JST)", "WSST (MIT)", "AMT (NET)", "NZST (NST)", "PKT (PLT)", "MST (PNT)", "AST (PRT)", "PST (PST)", "SBT (SST)", "ICT (VST)" ]
        },
        "lines" : 0,
        "displayPosition" : 120,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "timeZoneID",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.timeDriver",
        "type" : "STRING",
        "defaultValue" : "${time:now()}",
        "description" : "Time basis to use for a record. Enter an expression that evaluates to a datetime. To use the processing time, enter ${time:now()}. To use field values, use '${record:value(\"<filepath>\")}'.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Time Basis",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "275", "276", "277", "278", "279", "280", "281", "282", "283", "284", "323", "324", "325", "326", "327", "328", "329", "307" ],
        "elConstantDefinitionsIdx" : [ "19", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "298", "299", "300", "331", "332", "333" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 130,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "EXPLICIT",
        "fieldName" : "timeDriver",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.maxRecordsPerFile",
        "type" : "NUMBER",
        "defaultValue" : 0,
        "description" : "Number of records that triggers the creation of a new file. Use 0 to opt out.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Max Records in File",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 140,
        "dependsOnMap" : null,
        "min" : 0,
        "evaluation" : "IMPLICIT",
        "fieldName" : "maxRecordsPerFile",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.maxFileSize",
        "type" : "NUMBER",
        "defaultValue" : 0,
        "description" : "Exceeding this size triggers the creation of a new file. Use 0 to opt out.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Max File Size (MB)",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 150,
        "dependsOnMap" : null,
        "min" : 0,
        "evaluation" : "IMPLICIT",
        "fieldName" : "maxFileSize",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.idleTimeout",
        "type" : "STRING",
        "defaultValue" : "${1 * HOURS}",
        "description" : "Maximum time for a file to remain idle. After no records are written to a file for the specified time, the destination closes the file. Enter a number to specify a value in seconds. You can also use the MINUTES or HOURS constants in an expression. Use -1 to opt out of a timeout.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Idle Timeout",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "323", "324", "325", "326", "327", "328", "329" ],
        "elConstantDefinitionsIdx" : [ "19", "331", "332", "333" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 155,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "EXPLICIT",
        "fieldName" : "idleTimeout",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.compression",
        "type" : "MODEL",
        "defaultValue" : "NONE",
        "description" : "",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Compression Codec",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "NONE", "GZIP", "BZIP2", "SNAPPY", "LZ4", "OTHER" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.stage.destination.hdfs.CompressionChooserValues",
          "labels" : [ "None", "Gzip", "Bzip2", "Snappy", "LZ4", "Other..." ]
        },
        "lines" : 0,
        "displayPosition" : 160,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "compression",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.otherCompression",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "Use the full class name",
        "dependsOn" : "configs.compression",
        "triggeredByValues" : [ "OTHER" ],
        "label" : "Compression Codec Class",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 170,
        "dependsOnMap" : {
          "configs.compression" : [ "OTHER" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "otherCompression",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.keyEl",
        "type" : "STRING",
        "defaultValue" : "${uuid()}",
        "description" : "Record key for creating Hadoop sequence files. Valid options are '${record:value(\"<field-path>\")}' or '${uuid()}'",
        "dependsOn" : "configs.fileType",
        "triggeredByValues" : [ "SEQUENCE_FILE" ],
        "label" : "Sequence File Key",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "275", "276", "277", "278", "279", "280", "281", "282", "283", "284", "334" ],
        "elConstantDefinitionsIdx" : [ "19", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "298", "299", "300" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 180,
        "dependsOnMap" : {
          "configs.fileType" : [ "SEQUENCE_FILE" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "keyEl",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.lateRecordsLimit",
        "type" : "STRING",
        "defaultValue" : "${1 * HOURS}",
        "description" : "Time limit (in seconds) for a record to be written to the corresponding HDFS directory, if the limit is exceeded the record will be written to the current late records file. 0 means no limit. If a number is used it is considered seconds, it can be multiplied by 'MINUTES' or 'HOURS', ie: '${30 * MINUTES}'",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Late Record Time Limit (secs)",
        "group" : "LATE_RECORDS",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "323", "324", "325", "326", "327", "328", "329" ],
        "elConstantDefinitionsIdx" : [ "19", "331", "332", "333" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 200,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "EXPLICIT",
        "fieldName" : "lateRecordsLimit",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.rollIfHeader",
        "type" : "BOOLEAN",
        "defaultValue" : false,
        "description" : "Closes the current file and creates a new file when processing a record with the specified roll attribute",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Use Roll Attribute",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 204,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "rollIfHeader",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.rollHeaderName",
        "type" : "STRING",
        "defaultValue" : "roll",
        "description" : "Name of the roll attribute",
        "dependsOn" : "configs.rollIfHeader",
        "triggeredByValues" : [ true ],
        "label" : "Roll Attribute Name",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 205,
        "dependsOnMap" : {
          "configs.rollIfHeader" : [ true ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "rollHeaderName",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.lateRecordsAction",
        "type" : "MODEL",
        "defaultValue" : "SEND_TO_ERROR",
        "description" : "Action for records considered late.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Late Record Handling",
        "group" : "LATE_RECORDS",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "SEND_TO_ERROR", "SEND_TO_LATE_RECORDS_FILE" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.stage.destination.hdfs.LateRecordsActionChooserValues",
          "labels" : [ "Send to error", "Send to late records file" ]
        },
        "lines" : 0,
        "displayPosition" : 210,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "lateRecordsAction",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.lateRecordsDirPathTemplate",
        "type" : "STRING",
        "defaultValue" : "/tmp/late/${YYYY()}-${MM()}-${DD()}",
        "description" : "Template for the creation of late record directories. Valid variables are ${YYYY()}, ${MM()}, ${DD()}, ${hh()}, ${mm()}, ${ss()}.",
        "dependsOn" : "configs.lateRecordsAction",
        "triggeredByValues" : [ "SEND_TO_LATE_RECORDS_FILE" ],
        "label" : "Late Record Directory Template",
        "group" : "LATE_RECORDS",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "275", "276", "277", "278", "279", "280", "281", "282", "283", "284", "323", "324", "325", "326", "327", "328", "329" ],
        "elConstantDefinitionsIdx" : [ "19", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "298", "299", "300", "331", "332", "333" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 220,
        "dependsOnMap" : {
          "configs.lateRecordsAction" : [ "SEND_TO_LATE_RECORDS_FILE" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "EXPLICIT",
        "fieldName" : "lateRecordsDirPathTemplate",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataFormat",
        "type" : "MODEL",
        "defaultValue" : "TEXT",
        "description" : "Data Format",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Data Format",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "TEXT", "JSON", "DELIMITED", "AVRO", "PROTOBUF" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.stage.destination.hdfs.DataFormatChooserValues",
          "labels" : [ "Text", "JSON", "Delimited", "Avro", "Protobuf" ]
        },
        "lines" : 0,
        "displayPosition" : 100,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "dataFormat",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.charset",
        "type" : "MODEL",
        "defaultValue" : "UTF-8",
        "description" : "",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "TEXT", "JSON", "DELIMITED" ],
        "label" : "Charset",
        "group" : "OUTPUT_FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "UTF-8", "US-ASCII", "UTF-16", "ISO-8859-1", "IBM-500", "GBK", "Big5", "Big5-HKSCS", "CESU-8", "EUC-JP", "EUC-KR", "GB18030", "GB2312", "IBM-Thai", "IBM00858", "IBM01140", "IBM01141", "IBM01142", "IBM01143", "IBM01144", "IBM01145", "IBM01146", "IBM01147", "IBM01148", "IBM01149", "IBM037", "IBM1026", "IBM1047", "IBM273", "IBM277", "IBM278", "IBM280", "IBM284", "IBM285", "IBM290", "IBM297", "IBM420", "IBM424", "IBM437", "IBM500", "IBM775", "IBM850", "IBM852", "IBM855", "IBM857", "IBM860", "IBM861", "IBM862", "IBM863", "IBM864", "IBM865", "IBM866", "IBM868", "IBM869", "IBM870", "IBM871", "IBM918", "ISO-2022-CN", "ISO-2022-JP", "ISO-2022-JP-2", "ISO-2022-KR", "ISO-8859-13", "ISO-8859-15", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "JIS_X0201", "JIS_X0212-1990", "KOI8-R", "KOI8-U", "Shift_JIS", "TIS-620", "UTF-16BE", "UTF-16LE", "UTF-32", "UTF-32BE", "UTF-32LE", "windows-1250", "windows-1251", "windows-1252", "windows-1253", "windows-1254", "windows-1255", "windows-1256", "windows-1257", "windows-1258", "windows-31j", "x-Big5-HKSCS-2001", "x-Big5-Solaris", "x-COMPOUND_TEXT", "x-euc-jp-linux", "x-EUC-TW", "x-eucJP-Open", "x-IBM1006", "x-IBM1025", "x-IBM1046", "x-IBM1097", "x-IBM1098", "x-IBM1112", "x-IBM1122", "x-IBM1123", "x-IBM1124", "x-IBM1166", "x-IBM1364", "x-IBM1381", "x-IBM1383", "x-IBM300", "x-IBM33722", "x-IBM737", "x-IBM833", "x-IBM834", "x-IBM856", "x-IBM874", "x-IBM875", "x-IBM921", "x-IBM922", "x-IBM930", "x-IBM933", "x-IBM935", "x-IBM937", "x-IBM939", "x-IBM942", "x-IBM942C", "x-IBM943", "x-IBM943C", "x-IBM948", "x-IBM949", "x-IBM949C", "x-IBM950", "x-IBM964", "x-IBM970", "x-ISCII91", "x-ISO-2022-CN-CNS", "x-ISO-2022-CN-GB", "x-iso-8859-11", "x-JIS0208", "x-JISAutoDetect", "x-Johab", "x-MacArabic", "x-MacCentralEurope", "x-MacCroatian", "x-MacCyrillic", "x-MacDingbat", "x-MacGreek", "x-MacHebrew", "x-MacIceland", "x-MacRoman", "x-MacRomania", "x-MacSymbol", "x-MacThai", "x-MacTurkish", "x-MacUkraine", "x-MS932_0213", "x-MS950-HKSCS", "x-MS950-HKSCS-XP", "x-mswin-936", "x-PCK", "x-SJIS_0213", "x-UTF-16LE-BOM", "X-UTF-32BE-BOM", "X-UTF-32LE-BOM", "x-windows-50220", "x-windows-50221", "x-windows-874", "x-windows-949", "x-windows-950", "x-windows-iso2022jp" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.CharsetChooserValues",
          "labels" : [ "UTF-8", "US-ASCII", "UTF-16", "ISO-8859-1", "IBM-500", "GBK", "Big5", "Big5-HKSCS", "CESU-8", "EUC-JP", "EUC-KR", "GB18030", "GB2312", "IBM-Thai", "IBM00858", "IBM01140", "IBM01141", "IBM01142", "IBM01143", "IBM01144", "IBM01145", "IBM01146", "IBM01147", "IBM01148", "IBM01149", "IBM037", "IBM1026", "IBM1047", "IBM273", "IBM277", "IBM278", "IBM280", "IBM284", "IBM285", "IBM290", "IBM297", "IBM420", "IBM424", "IBM437", "IBM500", "IBM775", "IBM850", "IBM852", "IBM855", "IBM857", "IBM860", "IBM861", "IBM862", "IBM863", "IBM864", "IBM865", "IBM866", "IBM868", "IBM869", "IBM870", "IBM871", "IBM918", "ISO-2022-CN", "ISO-2022-JP", "ISO-2022-JP-2", "ISO-2022-KR", "ISO-8859-13", "ISO-8859-15", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "JIS_X0201", "JIS_X0212-1990", "KOI8-R", "KOI8-U", "Shift_JIS", "TIS-620", "UTF-16BE", "UTF-16LE", "UTF-32", "UTF-32BE", "UTF-32LE", "windows-1250", "windows-1251", "windows-1252", "windows-1253", "windows-1254", "windows-1255", "windows-1256", "windows-1257", "windows-1258", "windows-31j", "x-Big5-HKSCS-2001", "x-Big5-Solaris", "x-COMPOUND_TEXT", "x-euc-jp-linux", "x-EUC-TW", "x-eucJP-Open", "x-IBM1006", "x-IBM1025", "x-IBM1046", "x-IBM1097", "x-IBM1098", "x-IBM1112", "x-IBM1122", "x-IBM1123", "x-IBM1124", "x-IBM1166", "x-IBM1364", "x-IBM1381", "x-IBM1383", "x-IBM300", "x-IBM33722", "x-IBM737", "x-IBM833", "x-IBM834", "x-IBM856", "x-IBM874", "x-IBM875", "x-IBM921", "x-IBM922", "x-IBM930", "x-IBM933", "x-IBM935", "x-IBM937", "x-IBM939", "x-IBM942", "x-IBM942C", "x-IBM943", "x-IBM943C", "x-IBM948", "x-IBM949", "x-IBM949C", "x-IBM950", "x-IBM964", "x-IBM970", "x-ISCII91", "x-ISO-2022-CN-CNS", "x-ISO-2022-CN-GB", "x-iso-8859-11", "x-JIS0208", "x-JISAutoDetect", "x-Johab", "x-MacArabic", "x-MacCentralEurope", "x-MacCroatian", "x-MacCyrillic", "x-MacDingbat", "x-MacGreek", "x-MacHebrew", "x-MacIceland", "x-MacRoman", "x-MacRomania", "x-MacSymbol", "x-MacThai", "x-MacTurkish", "x-MacUkraine", "x-MS932_0213", "x-MS950-HKSCS", "x-MS950-HKSCS-XP", "x-mswin-936", "x-PCK", "x-SJIS_0213", "x-UTF-16LE-BOM", "X-UTF-32BE-BOM", "X-UTF-32LE-BOM", "x-windows-50220", "x-windows-50221", "x-windows-874", "x-windows-949", "x-windows-950", "x-windows-iso2022jp" ]
        },
        "lines" : 0,
        "displayPosition" : 300,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "TEXT", "JSON", "DELIMITED" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "charset",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvFileFormat",
        "type" : "MODEL",
        "defaultValue" : "CSV",
        "description" : "",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "DELIMITED" ],
        "label" : "Delimiter Format",
        "group" : "DELIMITED",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "CSV", "RFC4180", "EXCEL", "MYSQL", "TDF", "CUSTOM" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.CsvModeChooserValues",
          "labels" : [ "Default CSV (ignores empty lines)", "RFC4180 CSV", "MS Excel CSV", "MySQL CSV", "Tab Separated Values", "Custom" ]
        },
        "lines" : 0,
        "displayPosition" : 310,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "DELIMITED" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvFileFormat",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvHeader",
        "type" : "MODEL",
        "defaultValue" : "NO_HEADER",
        "description" : "",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "DELIMITED" ],
        "label" : "Header Line",
        "group" : "DELIMITED",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "WITH_HEADER", "IGNORE_HEADER", "NO_HEADER" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.CsvHeaderChooserValues",
          "labels" : [ "With Header Line", "Ignore Header Line", "No Header Line" ]
        },
        "lines" : 0,
        "displayPosition" : 320,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "DELIMITED" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvHeader",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvReplaceNewLines",
        "type" : "BOOLEAN",
        "defaultValue" : true,
        "description" : "Replaces new lines characters with configured string constant",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "DELIMITED" ],
        "label" : "Replace New Line Characters",
        "group" : "DELIMITED",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 330,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "DELIMITED" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvReplaceNewLines",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvReplaceNewLinesString",
        "type" : "STRING",
        "defaultValue" : " ",
        "description" : "String that will be used to substitute new line characters. Using empty string will remove the new line characters.",
        "dependsOn" : "configs.dataGeneratorFormatConfig.csvReplaceNewLines",
        "triggeredByValues" : [ true ],
        "label" : "New Line Character Replacement",
        "group" : "DELIMITED",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 335,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "DELIMITED" ],
          "configs.dataGeneratorFormatConfig.csvReplaceNewLines" : [ true ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvReplaceNewLinesString",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvCustomDelimiter",
        "type" : "CHARACTER",
        "defaultValue" : "|",
        "description" : "",
        "dependsOn" : "configs.dataGeneratorFormatConfig.csvFileFormat",
        "triggeredByValues" : [ "CUSTOM" ],
        "label" : "Delimiter Character",
        "group" : "DELIMITED",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 340,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "DELIMITED" ],
          "configs.dataGeneratorFormatConfig.csvFileFormat" : [ "CUSTOM" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvCustomDelimiter",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvCustomEscape",
        "type" : "CHARACTER",
        "defaultValue" : "\\",
        "description" : "",
        "dependsOn" : "configs.dataGeneratorFormatConfig.csvFileFormat",
        "triggeredByValues" : [ "CUSTOM" ],
        "label" : "Escape Character",
        "group" : "DELIMITED",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 350,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "DELIMITED" ],
          "configs.dataGeneratorFormatConfig.csvFileFormat" : [ "CUSTOM" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvCustomEscape",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvCustomQuote",
        "type" : "CHARACTER",
        "defaultValue" : "\"",
        "description" : "",
        "dependsOn" : "configs.dataGeneratorFormatConfig.csvFileFormat",
        "triggeredByValues" : [ "CUSTOM" ],
        "label" : "Quote Character",
        "group" : "DELIMITED",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 360,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "DELIMITED" ],
          "configs.dataGeneratorFormatConfig.csvFileFormat" : [ "CUSTOM" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "csvCustomQuote",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.jsonMode",
        "type" : "MODEL",
        "defaultValue" : "MULTIPLE_OBJECTS",
        "description" : "",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "JSON" ],
        "label" : "JSON Content",
        "group" : "JSON",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "ARRAY_OBJECTS", "MULTIPLE_OBJECTS" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.JsonModeChooserValues",
          "labels" : [ "JSON array of objects", "Multiple JSON objects" ]
        },
        "lines" : 0,
        "displayPosition" : 370,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "JSON" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "jsonMode",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.textFieldPath",
        "type" : "MODEL",
        "defaultValue" : "/",
        "description" : "String field that will be written to the destination",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "TEXT" ],
        "label" : "Text Field Path",
        "group" : "TEXT",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : null,
          "configDefinitions" : null,
          "modelType" : "FIELD_SELECTOR",
          "valuesProviderClass" : null,
          "labels" : null
        },
        "lines" : 0,
        "displayPosition" : 380,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "TEXT" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "textFieldPath",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.textEmptyLineIfNull",
        "type" : "BOOLEAN",
        "defaultValue" : false,
        "description" : "",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "TEXT" ],
        "label" : "Empty Line If No Text",
        "group" : "TEXT",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 390,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "TEXT" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "textEmptyLineIfNull",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.avroSchemaInHeader",
        "type" : "BOOLEAN",
        "defaultValue" : true,
        "description" : "Uses the Avro schema embedded in the avroSchema record header attribute.",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "AVRO" ],
        "label" : "Load Schema from Header",
        "group" : "AVRO",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "application/json",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 400,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "AVRO" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "avroSchemaInHeader",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.avroSchema",
        "type" : "TEXT",
        "defaultValue" : null,
        "description" : "Optionally use the runtime:loadResource function to use a schema stored in a file",
        "dependsOn" : "configs.dataGeneratorFormatConfig.avroSchemaInHeader",
        "triggeredByValues" : [ false ],
        "label" : "Avro Schema",
        "group" : "AVRO",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "application/json",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 400,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "AVRO" ],
          "configs.dataGeneratorFormatConfig.avroSchemaInHeader" : [ false ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "avroSchema",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.avroCompression",
        "type" : "MODEL",
        "defaultValue" : "NULL",
        "description" : "",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "AVRO" ],
        "label" : "Avro Compression Codec",
        "group" : "AVRO",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "NULL", "SNAPPY", "BZIP2", "DEFLATE" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.pipeline.config.AvroCompressionChooserValues",
          "labels" : [ "Null", "Snappy", "Bzip2", "Deflate" ]
        },
        "lines" : 0,
        "displayPosition" : 415,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "AVRO" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "avroCompression",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.binaryFieldPath",
        "type" : "MODEL",
        "defaultValue" : "/",
        "description" : "Field to write data to Kafka",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "BINARY" ],
        "label" : "Binary Field Path",
        "group" : "BINARY",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : null,
          "configDefinitions" : null,
          "modelType" : "FIELD_SELECTOR",
          "valuesProviderClass" : null,
          "labels" : null
        },
        "lines" : 0,
        "displayPosition" : 420,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "BINARY" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "binaryFieldPath",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.protoDescriptorFile",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "Protobuf Descriptor File (.desc) path relative to SDC resources directory",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "PROTOBUF" ],
        "label" : "Protobuf Descriptor File",
        "group" : "PROTOBUF",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 430,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "PROTOBUF" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "protoDescriptorFile",
        "max" : 9223372036854775807
      }, {
        "name" : "configs.dataGeneratorFormatConfig.messageType",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "Fully Qualified Message Type name. Use format <packageName>.<messageTypeName>",
        "dependsOn" : "configs.dataFormat",
        "triggeredByValues" : [ "PROTOBUF" ],
        "label" : "Message Type",
        "group" : "PROTOBUF",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 440,
        "dependsOnMap" : {
          "configs.dataFormat" : [ "PROTOBUF" ]
        },
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "messageType",
        "max" : 9223372036854775807
      }, {
        "name" : "stageOnRecordError",
        "type" : "MODEL",
        "defaultValue" : "TO_ERROR",
        "description" : "Action to take with records sent to error",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "On Record Error",
        "group" : "",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : [ "DISCARD", "TO_ERROR", "STOP_PIPELINE" ],
          "configDefinitions" : null,
          "modelType" : "VALUE_CHOOSER",
          "valuesProviderClass" : "com.streamsets.datacollector.config.OnRecordErrorChooserValues",
          "labels" : [ "Discard", "Send to Error", "Stop Pipeline" ]
        },
        "lines" : 0,
        "displayPosition" : 30,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "stageOnRecordError",
        "max" : 9223372036854775807
      }, {
        "name" : "stageRequiredFields",
        "type" : "MODEL",
        "defaultValue" : [ ],
        "description" : "Records without any of these fields are sent to error",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Required Fields",
        "group" : "",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : {
          "values" : null,
          "configDefinitions" : null,
          "modelType" : "FIELD_SELECTOR_MULTI_VALUE",
          "valuesProviderClass" : null,
          "labels" : null
        },
        "lines" : 0,
        "displayPosition" : 10,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "stageRequiredFields",
        "max" : 9223372036854775807
      }, {
        "name" : "stageRecordPreconditions",
        "type" : "LIST",
        "defaultValue" : null,
        "description" : "Records that don't satisfy all the preconditions are sent to error",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Preconditions",
        "group" : "",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40" ],
        "elConstantDefinitionsIdx" : [ "19", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 20,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "EXPLICIT",
        "fieldName" : "stageRecordPreconditions",
        "max" : 9223372036854775807
      } ],
      "configGroupDefinition" : {
        "classNameToGroupsMap" : {
          "com.streamsets.pipeline.stage.destination.localfilesystem.Groups" : [ "OUTPUT_FILES", "LATE_RECORDS", "TEXT", "JSON", "DELIMITED", "AVRO", "BINARY", "PROTOBUF" ]
        },
        "groupNameToLabelMapList" : [ {
          "name" : "OUTPUT_FILES",
          "label" : "Output Files"
        }, {
          "name" : "LATE_RECORDS",
          "label" : "Late Records"
        }, {
          "name" : "TEXT",
          "label" : "Text"
        }, {
          "name" : "JSON",
          "label" : "JSON"
        }, {
          "name" : "DELIMITED",
          "label" : "Delimited"
        }, {
          "name" : "AVRO",
          "label" : "Avro"
        }, {
          "name" : "BINARY",
          "label" : "Binary"
        }, {
          "name" : "PROTOBUF",
          "label" : "Protobuf"
        } ]
      },
      "rawSourceDefinition" : null,
      "errorStage" : false,
      "statsAggregatorStage" : false,
      "offsetCommitTrigger" : false,
      "variableOutputStreams" : false,
      "outputStreams" : 0,
      "outputStreamLabelProviderClass" : null,
      "outputStreamLabels" : null,
      "executionModes" : [ "STANDALONE", "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING", "CLUSTER_MESOS_STREAMING" ],
      "resetOffset" : false,
      "onlineHelpRefUrl" : "index.html#Destinations/LocalFS.html#task_e33_3v5_1r",
      "icon" : "localfilesystem.png",
      "onRecordError" : true,
      "preconditions" : true
    }, {
      "name" : "com_streamsets_pipeline_stage_destination_recordstolocalfilesystem_ToErrorLocalFSDTarget",
      "type" : "TARGET",
      "className" : "com.streamsets.pipeline.stage.destination.recordstolocalfilesystem.ToErrorLocalFSDTarget",
      "version" : "1",
      "description" : "Writes records to a local File System as SDC records",
      "privateClassLoader" : false,
      "library" : "streamsets-datacollector-basic-lib",
      "label" : "Write to File",
      "libraryLabel" : "Basic",
      "configDefinitions" : [ {
        "name" : "directory",
        "type" : "STRING",
        "defaultValue" : null,
        "description" : "Directory to write records",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Directory",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 10,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "directory",
        "max" : 9223372036854775807
      }, {
        "name" : "uniquePrefix",
        "type" : "STRING",
        "defaultValue" : "sdc-${sdc:id()}",
        "description" : "File name prefix",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Files Prefix",
        "group" : "FILES",
        "required" : false,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "322" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 20,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "IMPLICIT",
        "fieldName" : "uniquePrefix",
        "max" : 9223372036854775807
      }, {
        "name" : "rotationIntervalSecs",
        "type" : "STRING",
        "defaultValue" : "${1 * HOURS}",
        "description" : "Max time to wait for error records before creating a new error file. \nEnter the time in seconds or use the default expression to enter the time limit in minutes. You can also use HOURS in the expression to enter the limit in hours.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "File Wait Time (secs)",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "323", "324", "325", "326", "327", "328", "329" ],
        "elConstantDefinitionsIdx" : [ "19", "331", "332", "333" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 30,
        "dependsOnMap" : null,
        "min" : -9223372036854775808,
        "evaluation" : "EXPLICIT",
        "fieldName" : "rotationIntervalSecs",
        "max" : 9223372036854775807
      }, {
        "name" : "maxFileSizeMbs",
        "type" : "NUMBER",
        "defaultValue" : 512,
        "description" : "Max file size to trigger the creation of a new file. Use 0 to opt out.",
        "dependsOn" : "",
        "triggeredByValues" : null,
        "label" : "Max File Size (MB)",
        "group" : "FILES",
        "required" : true,
        "elDefs" : null,
        "elFunctionDefinitionsIdx" : [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18" ],
        "elConstantDefinitionsIdx" : [ "19" ],
        "mode" : "text/plain",
        "model" : null,
        "lines" : 0,
        "displayPosition" : 40,
        "dependsOnMap" : null,
        "min" : 0,
        "evaluation" : "IMPLICIT",
        "fieldName" : "maxFileSizeMbs",
        "max" : 2147483647
      } ],
      "configGroupDefinition" : {
        "classNameToGroupsMap" : {
          "com.streamsets.pipeline.stage.destination.recordstolocalfilesystem.Groups" : [ "FILES" ]
        },
        "groupNameToLabelMapList" : [ {
          "name" : "FILES",
          "label" : "Files"
        } ]
      },
      "rawSourceDefinition" : null,
      "errorStage" : true,
      "statsAggregatorStage" : false,
      "offsetCommitTrigger" : false,
      "variableOutputStreams" : false,
      "outputStreams" : 0,
      "outputStreamLabelProviderClass" : null,
      "outputStreamLabels" : null,
      "executionModes" : [ "STANDALONE" ],
      "resetOffset" : false,
      "onlineHelpRefUrl" : "index.html#Destinations/SDCRecordFiles.html#task_e33_3v5_1r",
      "icon" : "",
      "onRecordError" : false,
      "preconditions" : false
    }, {
      "name" : "com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget",
      "type" : "TARGET",
      "className" : "com.streamsets.pipeline.stage.destination.devnull.StatsNullDTarget",
      "version" : "1",
      "description" : "Discards Pipeline Statistic Records",
      "privateClassLoader" : false,
      "library" : "streamsets-datacollector-basic-lib",
      "label" : "Discard",
      "libraryLabel" : "Basic",
      "configDefinitions" : [ ],
      "configGroupDefinition" : {
        "classNameToGroupsMap" : { },
        "groupNameToLabelMapList" : [ ]
      },
      "rawSourceDefinition" : null,
      "errorStage" : false,
      "statsAggregatorStage" : true,
      "offsetCommitTrigger" : false,
      "variableOutputStreams" : false,
      "outputStreams" : 0,
      "outputStreamLabelProviderClass" : null,
      "outputStreamLabels" : null,
      "executionModes" : [ "STANDALONE", "CLUSTER_BATCH", "CLUSTER_YARN_STREAMING", "CLUSTER_MESOS_STREAMING" ],
      "resetOffset" : false,
      "onlineHelpRefUrl" : "",
      "icon" : "",
      "onRecordError" : false,
      "preconditions" : false
    } ],
    "elCatalog" : null,
    "runtimeConfigs" : null,
    "stageIcons" : {
      "streamsets-datacollector-basic-lib:com_streamsets_pipeline_stage_destination_localfilesystem_LocalFileSystemDTarget" : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABHNCSVQICAgIfAhkiAAAAAZiS0dEAP8A/wD/oL2nkwAABz1JREFUaIHtWV1rFEsafqq6e3omk3FmjCRmo+6KmMSLRRm9MGsk6xpYI+GMiTssKGKWs3ixsJe7t/oD3B8gC+cPBPEX6K2wV4JIiMmNQgRJYpw40x/TXVV7MafK6krPR3KOZ1nIC810qqurn+d9n7fetzvAoR3aoR3a/9LIfibfuXOn/K2A6BZF0e7y8jLrZ25fBG7fvv07IcQP5XJ5olAopM4RQnQd63ZdCJE439raqnPO//H06dN//2QCc3Nzbj6ff/f48eOREydOgHO+B4z+8E7A037Txggh8DwPjx49ijY3N88/e/ZspRs+uxeBfD7/3bVr10ZGR0fx4cMHNU7IV+77BdlrTrFYxOLiovPkyZO/Afh7N3y0FwEhxF9v3LiBZrPZa2qq6UT7neN5Hi5cuADHce7Nz88PdLu3K4FqtXpyaGho9uTJk2g2m6C0J18FKO3o9z7OOQghuHr1atF13dqBCdi2fa9ardIwDMFYe1OwLAvAV71SSmHbtjosywKldA9oOS+TycB1XTiOo+br5jgOGGPwfR/T09MA8P1BCRAAS5cvX1byYYyBMQZKqQIgoyK1LIQA5zyR7JKUZVkghCjyhBBYlgXHcRSRKIoghEAQBBgbG8PIyMjVhYWFc/smUKvVrpw/f/5sPp+H7/ttRoQkvCaB6oDlr4yOBE8pTZA0E1eSkdETQiAMQ1y/fh2U0r/smwBjbGl+fl55X0rABK57nTEGIYQCLAHpQNN2H875HjIA4Ps+KpUKCCH3Hzx44PRNoFarDbqu++fJyUmVvLZtJzwsCUhZSeC6XHSg5r3mNb12yGjEcYxsNotKpTK8vb39Xd8EhBCLc3Nzg4wxxHG8J/y656VcdKlQSvdIqpP3zaKo71qUUnieh+npaQghUpM5lQDnfGlmZgaNRkOFkzG2RzIAEqAlUVMS+lia93Xw+j2WZSEMQ5w5cwalUumPi4uLv+5J4NatW2fGxsZ+Pzw8DN/3YVlWwpuSiOkpE5yZI53kIoGnRcFxHAghEMcxZmZmKIClngQsy7pXrVaJ53ngnCOOY7iumwBuyqWTvCQpM1l7gQe+RhYAgiDApUuXAOD7Wq2WKBwJAg8fPqSEkPuVSgWNRkM9lHMO13XVotJDZmKaXjYjYnpYmswj/frAwIDavqMowpEjR3Du3LmTjLHZjgRev349MzU19RvbttFqtRQQ3/eRyWSQy+US+7R8eBpw89wEbmpfmm3bKBQKCIIAcRyr8SAIcOXKFcCozAkCQoil2dlZNBqNxAM456jX6yCEIJ/Pq13G9H5aFNJAmjkAtCWTz+dRKBTQaDTgeV5ibhiGmJiYQC6Xqy4sLAzvIXD37t0jpVLpT6dPn0az2VTJqXu6Xq/jy5cvyGazKBaLSlZ6JMwc6CQXPVEHBwdRLrdf9ra2thAEgZovWw253tTUVIYQck9FTJ6EYXjr5s2bA1EUgXOOUqkESimCIEi0EmEYIgxDuK6LXC6HXC4HoK3TOI4TFdn0tMwh2fg5joMoiuD7Pur1upKMTr5UKgEAms0mWq0WLl68iBcvXtwH8K8EASHEdKVSged5qg+RuZAW+iAIlKcymQwymYzqNmXLoUdHRiaOY0RRhGaziSAIVJfbqdj5vg9KKVqtFhhjOHXqFAqFwm9rtVpxeXm5rr+RHT969CharZYqIBJ8r/eAOI4TCdfJdAfonWpaVZbnupxs20Y2m5VKyAOo6xGwd3Z2MDQ0hMHBwa4P72e807V+x9LGGWNYW1sD5xyWZQnAeCeOogjr6+uqBpg9S9oO08/YT11Dt+PHjyf+TmgjrVKaRLp5qNfcg6xhvrGZGM06kDiPoghv3rzB+vo63r17h42NDXz8+BGfPn3C7u4ums0mfN9HGIaI41jtPt1Mgjt79iw+f/6M8fFx9Vuv1zExMYF6vY7JyUns7OxgfHy8K+E9n1VMEr7vQwiheiG5J8tuEYAqbHK/N/ubXho3e6VOSkhbq6uE9E5zP7YfCXWa38lMjHoEqJlAhBAcO3YssU32+7CD5EI/a5vzbLS/PuQ557a5ACEEo6OjSi5S71EUdVxc3mc+0Fz7oETkte3t7awkkAMwwBizzYdRSlEsFlM/UsVxjDAMVdco24i0itoNXC/ApmTk37u7uzkArg3AAZABwIIgQDabVdVRCKE6026HNP09QYLTx/RjfX0d5XIZa2trKJfLWF1dRbFYxOrqqvq7XC7j7du3ic1B7o6bm5sRAEdv5v7z/PnzP9RqNZRKpUT/oh+dWmfzY5b59ULfYcxr5hrme7M+Z2VlBUEQvNrY2PgiJRQBCF++fPmDZVm/evXq1U0ALiGECCEE6eej5jc0kdSXEEKsvH///p8AWgBaEtyAdmTRlpWMTs9P8N/YZJcYoQ06AOD9eAS6d220wbs/nlto14n9F4Kf12LtV5LwAXCg839oKL4SsDrM+aUsRhssA9B/xTu0Qzu0/w/7LzZwp+eQ5Lm6AAAAAElFTkSuQmCC",
      "streamsets-datacollector-basic-lib:com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor" : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAAD90lEQVRoge3ZXYhVVRQH8J+TZkyW9IE1FGpiWRj0gVIgmQkmFD0kvoRQImUfL1EPRa/VUy+BD5lhPQRFmlSWfakEQRARZIph0Qc4hWLlmFbSqDO3h3Vvc+65+5x7ZubO9HL/cF72WWvt/9p7nbXXXocuuuiiiy7GgSmTONdC3IGezNgADmaefyaRz5gwB/dgMw6jlnsOYCPuxPT/iWNlTMESbMFprc4cwwYs6PTEZ2ERHsGlHbJ5Bd7V6kRNOPcCLhrPBPPxELbhKPabgJXBapyQduQXLKtqaC7WYyt+zRn6GOd2jnMLrhdkU06cqfMqxFp8jeECAx+hd2J4N2Eh/izgMIwHihR7hIfHE4q7cPYoicwQ274eT4gFWq5ahlld4EANg7ixTHmeiPOGwo9G9xEtFeH3t8j1+8T2N+wNiG+qHXaUOPFVmeJynDISdzdXJH453sxM8pKR7+XaOvEsifvb2FsgnWIbz+0ppbk4khHaWJH8rTm9txIym3MEDlSwu7vEgU154V7szQgMilVth5VGdqyGQ9IhtylH4FgF2w+XOLAvL/xiTuCVChMs1PrRP1Yguz8nt6uC/b4SBwaygmsSAskYy6AHX+R0jkufE0tycmfqY1XwW4EDfzUEZmn9wAYLiGRxX8Lo1oRcr9juLPm1FcnDZwUOfNsQ2JB4uaeC4c8TenliM/Fh5v0PuGUU5OH1Age2EQXZYOLlzjZGZ0uf2NfU358nDrD++vhBcYJOGyV5eKPAgXunYpX0Cft7G6M3ab0QDeNBLMYNdfI7sV3UUKfGQB7OSYydxDtTxeUhhXY1z5zE2JCoYZ4SNdWJqgzbYFZibEPD/k/S2/NlG6OPJ3Te7wzfJkwXV83sPD+LENWDywoU2x1g/Ymx4bFxLMUizcVfDevETiNOw6KD4soSw32aC7Sa2M0qWIbrKsq+nJvjubzAd4odKKy769iS0FlRIt+H9/CNdFyn5LMZ8gPNXQ20eph9tleYIN9dOCyyUBbTRfk8gE8rkqe5tOkv0ru7xIEhI3m9CFfj+4TeJ6J4e7tO/CgexdSK5JcaOWf+EFfNJHrElhY58WqFyaaJWmqLCMkBcY7swWui7p9RkThcIi5RDQ67tblQrRSrlnJgWHTUJgsXaq1aayLZrFfSTXwmodR4jihOt53EBYoLt5rY2dLE8qTijsRB5Wl1vJivOWwahLeKlZ9X1dA6xc2lflEDdRorxC3utKhwn8VtxtEfnS1SaMqJ03h6PMZzWInncRfO75DN/7BYpMFUZ+CQ6PXM7PSkE4E+Ubzt0BpeJ0UrZZUJWMF2GMsPjikixK7CxepVYR1DouG018QUdl100UUXXXQW/wKLgdYjXL+F5AAAAABJRU5ErkJggg==",
      "streamsets-datacollector-basic-lib:com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget" : null,
      "streamsets-datacollector-basic-lib:com_streamsets_pipeline_stage_origin_spooldir_SpoolDirDSource" : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAQAAAD9CzEMAAAAe0lEQVR4Ae3VMQ7CMBBE0X+a4GNyIKSQHCxExCUw1BZGFN5t0Pzp/SQ3i3Ou6cSVO/qyM4NN3FC7WOKCUCaxoVzigUJWWSl0eqKw7ZRcQCzZwJEN6B+BlwEDw4AMGPg9AwZq9tFfQ4GZjwo7CtrGBD1i4Qj4nLl93jn3BjR5layvzA8cAAAAAElFTkSuQmCC",
      "streamsets-datacollector-basic-lib:com_streamsets_pipeline_stage_processor_javascript_JavaScriptDProcessor" : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEwAACxMBAJqcGAAAA0dJREFUaIHt2EuIHFUUBuCvfUwYo8gYjBnGxxhkAho1UYKPZOEjuhAVV0YNCoKCKxeCq7gIunDhRhBcJCIiKEZRUZT4wMfgIqiRRI2KUfGxcPARSBjUkYnTLk51aIbqulXVbQWhf7h0U+fUf85fdevecw9DDDHE/xqto51AF5bidJyMEczjEGay31xUEXBzNnphG96qwDeKG3E9NmCywPc37ME0XsW+CnGOYCvaBeOekjyj2IIDCb6isRsr4Lg6SvrABXgBU33yTIkH0KiADdiJEwfA9Y74RhwzALIyOEvM3UEkD292/jQl4HGMDZDviIAmptDFuC7hcxg78Aa+F9NjKSZwHtbjMpHv/swHzQi4LWH/Bdfis4TfsoxrSffFJgRcnrDfJ508seo8tvhiE9/AZMK+qx/yJgSMJOwr+yFvQsCBhP1hfSyvTQjYm7Cvw4dio6uMJgS8VMLnXHyAt8WSWzqvJgS8iG9L+m7E6/gOD4h9oBBNCJjHXViocM8kHsKPeE4UgbloqpSYVr7c7sax2CS+o+1yypGmBMgS2IQ/a9zbEm9xLy7qNjQpAJ7HGrxX8/4z8b5YudC8APgGV+MGfFTj/pPwiqiNjooA4lj4Gi7NxhMKDu45GBcfeSVsNZgzcS+M4g58mojTGXMYq/IGUr7tigkvxl94GmtxJ2YT/ktwTRUBJyTscxW4irCAp3AV/k74rq0iYDxhTz2xqtgt3kgRVlQR0HM3zDBTgassPk/Y22UFTGF1wmd/Sa4qOCNh/7UMSUtUlEUrwg8JjgdxYZlgXVieJVgU99aO82r5fdJxPJMgaYsyoReWdfl9jPvFdOz19lu4El8lYs7j1BZOEaemg2Ia/J4RTeD8gkDduEIUbHm4CS/nXJ/Fl6LiPJhdWy7aMKmpA89iM1FX1G2ytsVpqqjL/Wif/HnjD5zdCXBLH0T/4JLEk9rzHwjY3B1gSx9E9yaSHxMb06ASP4y7Fwd5sgbRXB5RDtYPMPkv9GiSTVd8AjuwqkTyHazCI6KfWSfxXbgdx+eRt0TzdKM4aKzEaaLmXhCnpxl8nRHtFL3MOmjhHNGkXSM2xwmxCo6IumcWP4vV8BO8i59qxhtiiCGGaAD/AtEHZvrzSkZDAAAAAElFTkSuQmCC",
      "streamsets-datacollector-basic-lib:com_streamsets_pipeline_stage_destination_recordstolocalfilesystem_ToErrorLocalFSDTarget" : null
    },
    "rulesElMetadata" : null
  }
}